<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="80594170974"><g><title>&lt;packet_rewriter::network::packet::IpPacket as packet_rewriter::network::packet::NetworkPacket&gt;::get_mut_payload (11,689,126 samples, 0.01%)</title><rect x="0.0054%" y="565" width="0.0145%" height="15" fill="rgb(227,0,7)" fg:x="4358462" fg:w="11689126"/><text x="0.2554%" y="575.50"></text></g><g><title>&lt;packet_rewriter::network::packet::IpPacket as packet_rewriter::network::packet::NetworkPacket&gt;::get_next_layer (10,924,319 samples, 0.01%)</title><rect x="0.0199%" y="565" width="0.0136%" height="15" fill="rgb(217,0,24)" fg:x="16047588" fg:w="10924319"/><text x="0.2699%" y="575.50"></text></g><g><title>&lt;pnet_datalink::backend::DataLinkSenderImpl as pnet_datalink::DataLinkSender&gt;::send_to (32,900,366 samples, 0.04%)</title><rect x="0.0335%" y="565" width="0.0408%" height="15" fill="rgb(221,193,54)" fg:x="26971907" fg:w="32900366"/><text x="0.2835%" y="575.50"></text></g><g><title>packet_rewriter::network::listen::cap_rewrite (24,514,855 samples, 0.03%)</title><rect x="0.0900%" y="549" width="0.0304%" height="15" fill="rgb(248,212,6)" fg:x="72519179" fg:w="24514855"/><text x="0.3400%" y="559.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_mac (11,746,950 samples, 0.01%)</title><rect x="0.1204%" y="549" width="0.0146%" height="15" fill="rgb(208,68,35)" fg:x="97034034" fg:w="11746950"/><text x="0.3704%" y="559.50"></text></g><g><title>pnet_packet::util::ipv4_checksum (26,157,967 samples, 0.03%)</title><rect x="0.1350%" y="549" width="0.0325%" height="15" fill="rgb(232,128,0)" fg:x="108780984" fg:w="26157967"/><text x="0.3850%" y="559.50"></text></g><g><title>[packet_rewriter] (72,660,793 samples, 0.09%)</title><rect x="0.0846%" y="565" width="0.0902%" height="15" fill="rgb(207,160,47)" fg:x="68200336" fg:w="72660793"/><text x="0.3346%" y="575.50"></text></g><g><title>&lt;pnet_datalink::backend::DataLinkSenderImpl as pnet_datalink::DataLinkSender&gt;::send_to (15,569,941 samples, 0.02%)</title><rect x="0.1934%" y="549" width="0.0193%" height="15" fill="rgb(228,23,34)" fg:x="155896753" fg:w="15569941"/><text x="0.4434%" y="559.50"></text></g><g><title>[unknown] (10,684,955 samples, 0.01%)</title><rect x="0.2128%" y="549" width="0.0133%" height="15" fill="rgb(218,30,26)" fg:x="171466694" fg:w="10684955"/><text x="0.4628%" y="559.50"></text></g><g><title>pnet_sys::send_to (10,684,955 samples, 0.01%)</title><rect x="0.2128%" y="533" width="0.0133%" height="15" fill="rgb(220,122,19)" fg:x="171466694" fg:w="10684955"/><text x="0.4628%" y="543.50"></text></g><g><title>__internal_syscall_cancel (11,330,031 samples, 0.01%)</title><rect x="0.2260%" y="549" width="0.0141%" height="15" fill="rgb(250,228,42)" fg:x="182151649" fg:w="11330031"/><text x="0.4760%" y="559.50"></text></g><g><title>__libc_calloc (42,641,800 samples, 0.05%)</title><rect x="0.2401%" y="549" width="0.0529%" height="15" fill="rgb(240,193,28)" fg:x="193481680" fg:w="42641800"/><text x="0.4901%" y="559.50"></text></g><g><title>__libc_sendto (13,175,216 samples, 0.02%)</title><rect x="0.2930%" y="549" width="0.0163%" height="15" fill="rgb(216,20,37)" fg:x="236123480" fg:w="13175216"/><text x="0.5430%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (60,195,778 samples, 0.07%)</title><rect x="0.3093%" y="549" width="0.0747%" height="15" fill="rgb(206,188,39)" fg:x="249298696" fg:w="60195778"/><text x="0.5593%" y="559.50"></text></g><g><title>__memset_avx2_unaligned_erms (11,386,881 samples, 0.01%)</title><rect x="0.3840%" y="549" width="0.0141%" height="15" fill="rgb(217,207,13)" fg:x="309494474" fg:w="11386881"/><text x="0.6340%" y="559.50"></text></g><g><title>__syscall_cancel (18,681,079 samples, 0.02%)</title><rect x="0.4153%" y="549" width="0.0232%" height="15" fill="rgb(231,73,38)" fg:x="334685336" fg:w="18681079"/><text x="0.6653%" y="559.50"></text></g><g><title>_int_malloc (60,765,256 samples, 0.08%)</title><rect x="0.4423%" y="549" width="0.0754%" height="15" fill="rgb(225,20,46)" fg:x="356463170" fg:w="60765256"/><text x="0.6923%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (26,040,022 samples, 0.03%)</title><rect x="0.5177%" y="549" width="0.0323%" height="15" fill="rgb(210,31,41)" fg:x="417228426" fg:w="26040022"/><text x="0.7677%" y="559.50"></text></g><g><title>packet_rewriter::network::listen::cap_rewrite (70,821,241 samples, 0.09%)</title><rect x="0.5594%" y="549" width="0.0879%" height="15" fill="rgb(221,200,47)" fg:x="450867544" fg:w="70821241"/><text x="0.8094%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (11,665,591 samples, 0.01%)</title><rect x="0.6328%" y="533" width="0.0145%" height="15" fill="rgb(226,26,5)" fg:x="510023194" fg:w="11665591"/><text x="0.8828%" y="543.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_ipv4 (21,895,171 samples, 0.03%)</title><rect x="0.6514%" y="549" width="0.0272%" height="15" fill="rgb(249,33,26)" fg:x="524961385" fg:w="21895171"/><text x="0.9014%" y="559.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_mac (64,061,148 samples, 0.08%)</title><rect x="0.6785%" y="549" width="0.0795%" height="15" fill="rgb(235,183,28)" fg:x="546856556" fg:w="64061148"/><text x="0.9285%" y="559.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_packet (11,206,993 samples, 0.01%)</title><rect x="0.7580%" y="549" width="0.0139%" height="15" fill="rgb(221,5,38)" fg:x="610917704" fg:w="11206993"/><text x="1.0080%" y="559.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_tcp (11,381,579 samples, 0.01%)</title><rect x="0.7719%" y="549" width="0.0141%" height="15" fill="rgb(247,18,42)" fg:x="622124697" fg:w="11381579"/><text x="1.0219%" y="559.50"></text></g><g><title>pcap_next_ex (9,897,726 samples, 0.01%)</title><rect x="0.7904%" y="549" width="0.0123%" height="15" fill="rgb(241,131,45)" fg:x="637006621" fg:w="9897726"/><text x="1.0404%" y="559.50"></text></g><g><title>pnet_packet::ipv4::checksum (12,772,874 samples, 0.02%)</title><rect x="0.8119%" y="549" width="0.0158%" height="15" fill="rgb(249,31,29)" fg:x="654351916" fg:w="12772874"/><text x="1.0619%" y="559.50"></text></g><g><title>pnet_packet::util::ipv4_checksum (22,657,994 samples, 0.03%)</title><rect x="0.8325%" y="549" width="0.0281%" height="15" fill="rgb(225,111,53)" fg:x="670941670" fg:w="22657994"/><text x="1.0825%" y="559.50"></text></g><g><title>[unknown] (563,943,726 samples, 0.70%)</title><rect x="0.1748%" y="565" width="0.6997%" height="15" fill="rgb(238,160,17)" fg:x="140861129" fg:w="563943726"/><text x="0.4248%" y="575.50"></text></g><g><title>pnet_sys::send_to (11,205,191 samples, 0.01%)</title><rect x="0.8606%" y="549" width="0.0139%" height="15" fill="rgb(214,148,48)" fg:x="693599664" fg:w="11205191"/><text x="1.1106%" y="559.50"></text></g><g><title>__internal_syscall_cancel (28,504,597 samples, 0.04%)</title><rect x="0.8745%" y="565" width="0.0354%" height="15" fill="rgb(232,36,49)" fg:x="704804855" fg:w="28504597"/><text x="1.1245%" y="575.50"></text></g><g><title>__irqentry_text_end (18,209,566 samples, 0.02%)</title><rect x="0.9099%" y="565" width="0.0226%" height="15" fill="rgb(209,103,24)" fg:x="733309452" fg:w="18209566"/><text x="1.1599%" y="575.50"></text></g><g><title>__libc_calloc (16,173,571 samples, 0.02%)</title><rect x="0.9325%" y="565" width="0.0201%" height="15" fill="rgb(229,88,8)" fg:x="751519018" fg:w="16173571"/><text x="1.1825%" y="575.50"></text></g><g><title>__libc_sendto (20,988,205 samples, 0.03%)</title><rect x="0.9525%" y="565" width="0.0260%" height="15" fill="rgb(213,181,19)" fg:x="767692589" fg:w="20988205"/><text x="1.2025%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (38,462,175 samples, 0.05%)</title><rect x="0.9786%" y="565" width="0.0477%" height="15" fill="rgb(254,191,54)" fg:x="788680794" fg:w="38462175"/><text x="1.2286%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (782,215,546 samples, 0.97%)</title><rect x="1.0263%" y="565" width="0.9706%" height="15" fill="rgb(241,83,37)" fg:x="827142969" fg:w="782215546"/><text x="1.2763%" y="575.50"></text></g><g><title>__syscall_cancel (37,577,466 samples, 0.05%)</title><rect x="2.0193%" y="565" width="0.0466%" height="15" fill="rgb(233,36,39)" fg:x="1627421771" fg:w="37577466"/><text x="2.2693%" y="575.50"></text></g><g><title>__internal_syscall_cancel (23,215,558 samples, 0.03%)</title><rect x="2.0371%" y="549" width="0.0288%" height="15" fill="rgb(226,3,54)" fg:x="1641783679" fg:w="23215558"/><text x="2.2871%" y="559.50"></text></g><g><title>packet_rewriter::network::capture::PacketCaptureGeneric&lt;T&gt;::open_device_capture (8,479,286 samples, 0.01%)</title><rect x="2.0807%" y="437" width="0.0105%" height="15" fill="rgb(245,192,40)" fg:x="1676933629" fg:w="8479286"/><text x="2.3307%" y="447.50"></text></g><g><title>pcap::capture::inactive::&lt;impl pcap::capture::Capture&lt;pcap::capture::Inactive&gt;&gt;::open (8,479,286 samples, 0.01%)</title><rect x="2.0807%" y="421" width="0.0105%" height="15" fill="rgb(238,167,29)" fg:x="1676933629" fg:w="8479286"/><text x="2.3307%" y="431.50"></text></g><g><title>pcap_activate (8,479,286 samples, 0.01%)</title><rect x="2.0807%" y="405" width="0.0105%" height="15" fill="rgb(232,182,51)" fg:x="1676933629" fg:w="8479286"/><text x="2.3307%" y="415.50"></text></g><g><title>pcap_activate_linux (8,479,286 samples, 0.01%)</title><rect x="2.0807%" y="389" width="0.0105%" height="15" fill="rgb(231,60,39)" fg:x="1676933629" fg:w="8479286"/><text x="2.3307%" y="399.50"></text></g><g><title>[unknown] (11,517,981 samples, 0.01%)</title><rect x="2.5097%" y="373" width="0.0143%" height="15" fill="rgb(208,69,12)" fg:x="2022633785" fg:w="11517981"/><text x="2.7597%" y="383.50"></text></g><g><title>_text (8,291,048 samples, 0.01%)</title><rect x="2.6723%" y="341" width="0.0103%" height="15" fill="rgb(235,93,37)" fg:x="2153722371" fg:w="8291048"/><text x="2.9223%" y="351.50"></text></g><g><title>__local_bh_enable_ip (67,941,678 samples, 0.08%)</title><rect x="3.4803%" y="245" width="0.0843%" height="15" fill="rgb(213,116,39)" fg:x="2804957140" fg:w="67941678"/><text x="3.7303%" y="255.50"></text></g><g><title>_raw_spin_lock_bh (48,095,158 samples, 0.06%)</title><rect x="3.5646%" y="245" width="0.0597%" height="15" fill="rgb(222,207,29)" fg:x="2872898818" fg:w="48095158"/><text x="3.8146%" y="255.50"></text></g><g><title>_raw_spin_unlock_bh (11,496,494 samples, 0.01%)</title><rect x="3.6243%" y="245" width="0.0143%" height="15" fill="rgb(206,96,30)" fg:x="2920993976" fg:w="11496494"/><text x="3.8743%" y="255.50"></text></g><g><title>__pollwait (13,791,103 samples, 0.02%)</title><rect x="3.6907%" y="229" width="0.0171%" height="15" fill="rgb(218,138,4)" fg:x="2974518628" fg:w="13791103"/><text x="3.9407%" y="239.50"></text></g><g><title>datagram_poll (71,962,413 samples, 0.09%)</title><rect x="3.6386%" y="245" width="0.0893%" height="15" fill="rgb(250,191,14)" fg:x="2932490470" fg:w="71962413"/><text x="3.8886%" y="255.50"></text></g><g><title>add_wait_queue (13,579,409 samples, 0.02%)</title><rect x="3.7110%" y="229" width="0.0168%" height="15" fill="rgb(239,60,40)" fg:x="2990873474" fg:w="13579409"/><text x="3.9610%" y="239.50"></text></g><g><title>packet_poll (329,116,543 samples, 0.41%)</title><rect x="3.3289%" y="261" width="0.4084%" height="15" fill="rgb(206,27,48)" fg:x="2682862949" fg:w="329116543"/><text x="3.5789%" y="271.50"></text></g><g><title>sock_poll (421,972,598 samples, 0.52%)</title><rect x="3.2181%" y="277" width="0.5236%" height="15" fill="rgb(225,35,8)" fg:x="2593579369" fg:w="421972598"/><text x="3.4681%" y="287.50"></text></g><g><title>do_poll.constprop.0 (553,679,113 samples, 0.69%)</title><rect x="3.0591%" y="293" width="0.6870%" height="15" fill="rgb(250,213,24)" fg:x="2465482049" fg:w="553679113"/><text x="3.3091%" y="303.50"></text></g><g><title>fput (25,794,301 samples, 0.03%)</title><rect x="3.8946%" y="277" width="0.0320%" height="15" fill="rgb(247,123,22)" fg:x="3138800348" fg:w="25794301"/><text x="4.1446%" y="287.50"></text></g><g><title>__list_del_entry_valid_or_report (22,468,019 samples, 0.03%)</title><rect x="4.0171%" y="261" width="0.0279%" height="15" fill="rgb(231,138,38)" fg:x="3237582991" fg:w="22468019"/><text x="4.2671%" y="271.50"></text></g><g><title>__raw_spin_lock_irqsave (33,374,303 samples, 0.04%)</title><rect x="4.0450%" y="261" width="0.0414%" height="15" fill="rgb(231,145,46)" fg:x="3260051010" fg:w="33374303"/><text x="4.2950%" y="271.50"></text></g><g><title>poll_freewait (286,024,188 samples, 0.35%)</title><rect x="3.7461%" y="293" width="0.3549%" height="15" fill="rgb(251,118,11)" fg:x="3019161162" fg:w="286024188"/><text x="3.9961%" y="303.50"></text></g><g><title>remove_wait_queue (140,590,701 samples, 0.17%)</title><rect x="3.9266%" y="277" width="0.1744%" height="15" fill="rgb(217,147,25)" fg:x="3164594649" fg:w="140590701"/><text x="4.1766%" y="287.50"></text></g><g><title>__x64_sys_poll (1,102,554,994 samples, 1.37%)</title><rect x="2.7380%" y="325" width="1.3680%" height="15" fill="rgb(247,81,37)" fg:x="2206682865" fg:w="1102554994"/><text x="2.9880%" y="335.50"></text></g><g><title>do_sys_poll (1,076,221,774 samples, 1.34%)</title><rect x="2.7707%" y="309" width="1.3354%" height="15" fill="rgb(209,12,38)" fg:x="2233016085" fg:w="1076221774"/><text x="3.0207%" y="319.50"></text></g><g><title>do_syscall_64 (1,376,943,235 samples, 1.71%)</title><rect x="2.6826%" y="341" width="1.7085%" height="15" fill="rgb(227,1,9)" fg:x="2162013419" fg:w="1376943235"/><text x="2.9326%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (222,695,138 samples, 0.28%)</title><rect x="4.1148%" y="325" width="0.2763%" height="15" fill="rgb(248,47,43)" fg:x="3316261516" fg:w="222695138"/><text x="4.3648%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (11,873,881 samples, 0.01%)</title><rect x="4.3763%" y="309" width="0.0147%" height="15" fill="rgb(221,10,30)" fg:x="3527082773" fg:w="11873881"/><text x="4.6263%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,434,134,899 samples, 1.78%)</title><rect x="2.6158%" y="357" width="1.7795%" height="15" fill="rgb(210,229,1)" fg:x="2108201748" fg:w="1434134899"/><text x="2.8658%" y="367.50">e..</text></g><g><title>entry_SYSRETQ_unsafe_stack (1,176,119,239 samples, 1.46%)</title><rect x="4.3953%" y="357" width="1.4593%" height="15" fill="rgb(222,148,37)" fg:x="3542336647" fg:w="1176119239"/><text x="4.6453%" y="367.50"></text></g><g><title>__internal_syscall_cancel (2,736,163,338 samples, 3.39%)</title><rect x="2.5239%" y="373" width="3.3950%" height="15" fill="rgb(234,67,33)" fg:x="2034151766" fg:w="2736163338"/><text x="2.7739%" y="383.50">__i..</text></g><g><title>syscall_return_via_sysret (51,859,218 samples, 0.06%)</title><rect x="5.8546%" y="357" width="0.0643%" height="15" fill="rgb(247,98,35)" fg:x="4718455886" fg:w="51859218"/><text x="6.1046%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (26,171,820 samples, 0.03%)</title><rect x="5.9380%" y="357" width="0.0325%" height="15" fill="rgb(247,138,52)" fg:x="4785660621" fg:w="26171820"/><text x="6.1880%" y="367.50"></text></g><g><title>__poll (2,882,422,528 samples, 3.58%)</title><rect x="2.4034%" y="405" width="3.5765%" height="15" fill="rgb(213,79,30)" fg:x="1936972154" fg:w="2882422528"/><text x="2.6534%" y="415.50">__po..</text></g><g><title>__syscall_cancel (2,847,365,677 samples, 3.53%)</title><rect x="2.4469%" y="389" width="3.5330%" height="15" fill="rgb(246,177,23)" fg:x="1972029005" fg:w="2847365677"/><text x="2.6969%" y="399.50">__s..</text></g><g><title>pnet_packet::util::ipv4_checksum (33,734,061 samples, 0.04%)</title><rect x="5.9380%" y="373" width="0.0419%" height="15" fill="rgb(230,62,27)" fg:x="4785660621" fg:w="33734061"/><text x="6.1880%" y="383.50"></text></g><g><title>__internal_syscall_cancel (116,862,193 samples, 0.15%)</title><rect x="6.0934%" y="389" width="0.1450%" height="15" fill="rgb(216,154,8)" fg:x="4910924202" fg:w="116862193"/><text x="6.3434%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (116,862,193 samples, 0.15%)</title><rect x="6.0934%" y="373" width="0.1450%" height="15" fill="rgb(244,35,45)" fg:x="4910924202" fg:w="116862193"/><text x="6.3434%" y="383.50"></text></g><g><title>__x86_indirect_thunk_rax (19,510,296 samples, 0.02%)</title><rect x="6.5246%" y="341" width="0.0242%" height="15" fill="rgb(251,115,12)" fg:x="5258453557" fg:w="19510296"/><text x="6.7746%" y="351.50"></text></g><g><title>fdget (197,888,862 samples, 0.25%)</title><rect x="7.1748%" y="277" width="0.2455%" height="15" fill="rgb(240,54,50)" fg:x="5782472333" fg:w="197888862"/><text x="7.4248%" y="287.50"></text></g><g><title>import_ubuf (15,113,389 samples, 0.02%)</title><rect x="7.4203%" y="277" width="0.0188%" height="15" fill="rgb(233,84,52)" fg:x="5980361195" fg:w="15113389"/><text x="7.6703%" y="287.50"></text></g><g><title>__check_object_size.part.0 (28,150,669 samples, 0.03%)</title><rect x="7.5875%" y="261" width="0.0349%" height="15" fill="rgb(207,117,47)" fg:x="6115098665" fg:w="28150669"/><text x="7.8375%" y="271.50"></text></g><g><title>check_stack_object (10,219,142 samples, 0.01%)</title><rect x="7.6098%" y="245" width="0.0127%" height="15" fill="rgb(249,43,39)" fg:x="6133030192" fg:w="10219142"/><text x="7.8598%" y="255.50"></text></g><g><title>_copy_from_user (148,104,306 samples, 0.18%)</title><rect x="7.6224%" y="261" width="0.1838%" height="15" fill="rgb(209,38,44)" fg:x="6143249334" fg:w="148104306"/><text x="7.8724%" y="271.50"></text></g><g><title>move_addr_to_kernel (307,591,728 samples, 0.38%)</title><rect x="7.4391%" y="277" width="0.3817%" height="15" fill="rgb(236,212,23)" fg:x="5995474584" fg:w="307591728"/><text x="7.6891%" y="287.50"></text></g><g><title>srso_alias_safe_ret (11,712,672 samples, 0.01%)</title><rect x="7.8062%" y="261" width="0.0145%" height="15" fill="rgb(242,79,21)" fg:x="6291353640" fg:w="11712672"/><text x="8.0562%" y="271.50"></text></g><g><title>packet_sendmsg (11,617,972 samples, 0.01%)</title><rect x="7.8207%" y="277" width="0.0144%" height="15" fill="rgb(211,96,35)" fg:x="6303066312" fg:w="11617972"/><text x="8.0707%" y="287.50"></text></g><g><title>native_sched_clock (188,650,033 samples, 0.23%)</title><rect x="9.8173%" y="149" width="0.2341%" height="15" fill="rgb(253,215,40)" fg:x="7912191217" fg:w="188650033"/><text x="10.0673%" y="159.50"></text></g><g><title>irqtime_account_irq (446,452,791 samples, 0.55%)</title><rect x="9.5026%" y="197" width="0.5540%" height="15" fill="rgb(211,81,21)" fg:x="7658529072" fg:w="446452791"/><text x="9.7526%" y="207.50"></text></g><g><title>sched_clock_cpu (277,074,481 samples, 0.34%)</title><rect x="9.7127%" y="181" width="0.3438%" height="15" fill="rgb(208,190,38)" fg:x="7827907382" fg:w="277074481"/><text x="9.9627%" y="191.50"></text></g><g><title>sched_clock (215,264,477 samples, 0.27%)</title><rect x="9.7894%" y="165" width="0.2671%" height="15" fill="rgb(235,213,38)" fg:x="7889717386" fg:w="215264477"/><text x="10.0394%" y="175.50"></text></g><g><title>__netif_receive_skb (47,372,980 samples, 0.06%)</title><rect x="10.8652%" y="149" width="0.0588%" height="15" fill="rgb(237,122,38)" fg:x="8756751497" fg:w="47372980"/><text x="11.1152%" y="159.50"></text></g><g><title>__rcu_read_lock (11,421,210 samples, 0.01%)</title><rect x="11.8737%" y="101" width="0.0142%" height="15" fill="rgb(244,218,35)" fg:x="9569504606" fg:w="11421210"/><text x="12.1237%" y="111.50"></text></g><g><title>sk_skb_reason_drop (18,894,485 samples, 0.02%)</title><rect x="11.8973%" y="101" width="0.0234%" height="15" fill="rgb(240,68,47)" fg:x="9588531288" fg:w="18894485"/><text x="12.1473%" y="111.50"></text></g><g><title>packet_rcv (394,070,352 samples, 0.49%)</title><rect x="11.4405%" y="117" width="0.4890%" height="15" fill="rgb(210,16,53)" fg:x="9220367480" fg:w="394070352"/><text x="11.6905%" y="127.50"></text></g><g><title>__packet_rcv_has_room (229,234,718 samples, 0.28%)</title><rect x="12.3942%" y="101" width="0.2844%" height="15" fill="rgb(235,124,12)" fg:x="9989033368" fg:w="229234718"/><text x="12.6442%" y="111.50"></text></g><g><title>packet_lookup_frame.isra.0 (131,175,401 samples, 0.16%)</title><rect x="12.5159%" y="85" width="0.1628%" height="15" fill="rgb(224,169,11)" fg:x="10087092685" fg:w="131175401"/><text x="12.7659%" y="95.50"></text></g><g><title>__rcu_read_unlock (11,826,403 samples, 0.01%)</title><rect x="12.6835%" y="101" width="0.0147%" height="15" fill="rgb(250,166,2)" fg:x="10222199538" fg:w="11826403"/><text x="12.9335%" y="111.50"></text></g><g><title>_raw_spin_lock (43,481,664 samples, 0.05%)</title><rect x="12.6982%" y="101" width="0.0540%" height="15" fill="rgb(242,216,29)" fg:x="10234025941" fg:w="43481664"/><text x="12.9482%" y="111.50"></text></g><g><title>eth_header_parse (11,322,022 samples, 0.01%)</title><rect x="12.7573%" y="101" width="0.0140%" height="15" fill="rgb(230,116,27)" fg:x="10281677904" fg:w="11322022"/><text x="13.0073%" y="111.50"></text></g><g><title>sk_skb_reason_drop (23,085,956 samples, 0.03%)</title><rect x="12.7714%" y="101" width="0.0286%" height="15" fill="rgb(228,99,48)" fg:x="10292999926" fg:w="23085956"/><text x="13.0214%" y="111.50"></text></g><g><title>skb_copy_bits (660,534,994 samples, 0.82%)</title><rect x="12.8000%" y="101" width="0.8196%" height="15" fill="rgb(253,11,6)" fg:x="10316085882" fg:w="660534994"/><text x="13.0500%" y="111.50"></text></g><g><title>__memcpy (638,409,431 samples, 0.79%)</title><rect x="12.8275%" y="85" width="0.7921%" height="15" fill="rgb(247,143,39)" fg:x="10338211445" fg:w="638409431"/><text x="13.0775%" y="95.50"></text></g><g><title>sock_def_readable (67,648,653 samples, 0.08%)</title><rect x="13.6285%" y="101" width="0.0839%" height="15" fill="rgb(236,97,10)" fg:x="10983815052" fg:w="67648653"/><text x="13.8785%" y="111.50"></text></g><g><title>__rcu_read_lock (11,271,545 samples, 0.01%)</title><rect x="13.6985%" y="85" width="0.0140%" height="15" fill="rgb(233,208,19)" fg:x="11040192160" fg:w="11271545"/><text x="13.9485%" y="95.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (2,212,729,409 samples, 2.75%)</title><rect x="11.0310%" y="133" width="2.7455%" height="15" fill="rgb(216,164,2)" fg:x="8890375984" fg:w="2212729409"/><text x="11.2810%" y="143.50">__..</text></g><g><title>tpacket_rcv (1,488,667,561 samples, 1.85%)</title><rect x="11.9294%" y="117" width="1.8471%" height="15" fill="rgb(220,129,5)" fg:x="9614437832" fg:w="1488667561"/><text x="12.1794%" y="127.50">t..</text></g><g><title>tpacket_get_timestamp (44,077,913 samples, 0.05%)</title><rect x="13.7219%" y="101" width="0.0547%" height="15" fill="rgb(242,17,10)" fg:x="11059027480" fg:w="44077913"/><text x="13.9719%" y="111.50"></text></g><g><title>kmem_cache_free (178,834,253 samples, 0.22%)</title><rect x="13.9630%" y="101" width="0.2219%" height="15" fill="rgb(242,107,0)" fg:x="11253391851" fg:w="178834253"/><text x="14.2130%" y="111.50"></text></g><g><title>__memcg_slab_free_hook (26,069,690 samples, 0.03%)</title><rect x="14.1526%" y="85" width="0.0323%" height="15" fill="rgb(251,28,31)" fg:x="11406156414" fg:w="26069690"/><text x="14.4026%" y="95.50"></text></g><g><title>netdev_core_stats_inc (42,420,817 samples, 0.05%)</title><rect x="14.1849%" y="101" width="0.0526%" height="15" fill="rgb(233,223,10)" fg:x="11432226104" fg:w="42420817"/><text x="14.4349%" y="111.50"></text></g><g><title>__folio_put (25,161,520 samples, 0.03%)</title><rect x="14.6217%" y="69" width="0.0312%" height="15" fill="rgb(215,21,27)" fg:x="11784259414" fg:w="25161520"/><text x="14.8717%" y="79.50"></text></g><g><title>_raw_spin_trylock (10,925,414 samples, 0.01%)</title><rect x="15.3005%" y="53" width="0.0136%" height="15" fill="rgb(232,23,21)" fg:x="12331326755" fg:w="10925414"/><text x="15.5505%" y="63.50"></text></g><g><title>_raw_spin_unlock (15,697,148 samples, 0.02%)</title><rect x="15.3141%" y="53" width="0.0195%" height="15" fill="rgb(244,5,23)" fg:x="12342252169" fg:w="15697148"/><text x="15.5641%" y="63.50"></text></g><g><title>__list_add_valid_or_report (18,519,754 samples, 0.02%)</title><rect x="15.4564%" y="37" width="0.0230%" height="15" fill="rgb(226,81,46)" fg:x="12456941678" fg:w="18519754"/><text x="15.7064%" y="47.50"></text></g><g><title>free_frozen_page_commit (125,257,719 samples, 0.16%)</title><rect x="15.3336%" y="53" width="0.1554%" height="15" fill="rgb(247,70,30)" fg:x="12357949317" fg:w="125257719"/><text x="15.5836%" y="63.50"></text></g><g><title>free_tail_page_prepare (151,568,976 samples, 0.19%)</title><rect x="15.4890%" y="53" width="0.1881%" height="15" fill="rgb(212,68,19)" fg:x="12483207036" fg:w="151568976"/><text x="15.7390%" y="63.50"></text></g><g><title>get_pfnblock_flags_mask (76,488,152 samples, 0.09%)</title><rect x="15.6770%" y="53" width="0.0949%" height="15" fill="rgb(240,187,13)" fg:x="12634776012" fg:w="76488152"/><text x="15.9270%" y="63.50"></text></g><g><title>__free_frozen_pages (927,963,750 samples, 1.15%)</title><rect x="14.6529%" y="69" width="1.1514%" height="15" fill="rgb(223,113,26)" fg:x="11809420934" fg:w="927963750"/><text x="14.9029%" y="79.50"></text></g><g><title>srso_alias_return_thunk (26,120,520 samples, 0.03%)</title><rect x="15.7719%" y="53" width="0.0324%" height="15" fill="rgb(206,192,2)" fg:x="12711264164" fg:w="26120520"/><text x="16.0219%" y="63.50"></text></g><g><title>srso_alias_safe_ret (18,881,344 samples, 0.02%)</title><rect x="15.7809%" y="37" width="0.0234%" height="15" fill="rgb(241,108,4)" fg:x="12718503340" fg:w="18881344"/><text x="16.0309%" y="47.50"></text></g><g><title>kmem_cache_free (103,901,340 samples, 0.13%)</title><rect x="15.8043%" y="69" width="0.1289%" height="15" fill="rgb(247,173,49)" fg:x="12737384684" fg:w="103901340"/><text x="16.0543%" y="79.50"></text></g><g><title>skb_free_head (11,435,426 samples, 0.01%)</title><rect x="15.9333%" y="69" width="0.0142%" height="15" fill="rgb(224,114,35)" fg:x="12841286024" fg:w="11435426"/><text x="16.1833%" y="79.50"></text></g><g><title>skb_release_data (1,280,245,085 samples, 1.59%)</title><rect x="14.3639%" y="85" width="1.5885%" height="15" fill="rgb(245,159,27)" fg:x="11576432754" fg:w="1280245085"/><text x="14.6139%" y="95.50"></text></g><g><title>skb_release_head_state (24,005,809 samples, 0.03%)</title><rect x="15.9524%" y="85" width="0.0298%" height="15" fill="rgb(245,172,44)" fg:x="12856677839" fg:w="24005809"/><text x="16.2024%" y="95.50"></text></g><g><title>__netif_receive_skb_one_core (4,083,830,095 samples, 5.07%)</title><rect x="10.9240%" y="149" width="5.0672%" height="15" fill="rgb(236,23,11)" fg:x="8804124477" fg:w="4083830095"/><text x="11.1740%" y="159.50">__neti..</text></g><g><title>ip_rcv (1,784,849,179 samples, 2.21%)</title><rect x="13.7766%" y="133" width="2.2146%" height="15" fill="rgb(205,117,38)" fg:x="11103105393" fg:w="1784849179"/><text x="14.0266%" y="143.50">i..</text></g><g><title>ip_rcv_core (1,697,215,040 samples, 2.11%)</title><rect x="13.8853%" y="117" width="2.1059%" height="15" fill="rgb(237,72,25)" fg:x="11190739532" fg:w="1697215040"/><text x="14.1353%" y="127.50">i..</text></g><g><title>sk_skb_reason_drop (1,413,307,651 samples, 1.75%)</title><rect x="14.2376%" y="101" width="1.7536%" height="15" fill="rgb(244,70,9)" fg:x="11474646921" fg:w="1413307651"/><text x="14.4876%" y="111.50"></text></g><g><title>__rcu_read_lock (11,709,714 samples, 0.01%)</title><rect x="15.9912%" y="149" width="0.0145%" height="15" fill="rgb(217,125,39)" fg:x="12887954572" fg:w="11709714"/><text x="16.2412%" y="159.50"></text></g><g><title>__rcu_read_unlock (32,788,494 samples, 0.04%)</title><rect x="16.0057%" y="149" width="0.0407%" height="15" fill="rgb(235,36,10)" fg:x="12899664286" fg:w="32788494"/><text x="16.2557%" y="159.50"></text></g><g><title>_raw_spin_lock_irq (80,452,024 samples, 0.10%)</title><rect x="16.0464%" y="149" width="0.0998%" height="15" fill="rgb(251,123,47)" fg:x="12932452780" fg:w="80452024"/><text x="16.2964%" y="159.50"></text></g><g><title>_raw_spin_unlock_irq (87,045,390 samples, 0.11%)</title><rect x="16.1462%" y="149" width="0.1080%" height="15" fill="rgb(221,13,13)" fg:x="13012904804" fg:w="87045390"/><text x="16.3962%" y="159.50"></text></g><g><title>process_backlog (4,635,216,977 samples, 5.75%)</title><rect x="10.5074%" y="165" width="5.7513%" height="15" fill="rgb(238,131,9)" fg:x="8468350304" fg:w="4635216977"/><text x="10.7574%" y="175.50">process..</text></g><g><title>__napi_poll (4,697,355,645 samples, 5.83%)</title><rect x="10.4342%" y="181" width="5.8284%" height="15" fill="rgb(211,50,8)" fg:x="8409317802" fg:w="4697355645"/><text x="10.6842%" y="191.50">__napi_..</text></g><g><title>__usecs_to_jiffies (22,679,787 samples, 0.03%)</title><rect x="16.2626%" y="181" width="0.0281%" height="15" fill="rgb(245,182,24)" fg:x="13106673447" fg:w="22679787"/><text x="16.5126%" y="191.50"></text></g><g><title>net_rx_action (5,032,090,793 samples, 6.24%)</title><rect x="10.0565%" y="197" width="6.2437%" height="15" fill="rgb(242,14,37)" fg:x="8104981863" fg:w="5032090793"/><text x="10.3065%" y="207.50">net_rx_a..</text></g><g><title>do_softirq.part.0 (5,844,405,650 samples, 7.25%)</title><rect x="9.0582%" y="229" width="7.2516%" height="15" fill="rgb(246,228,12)" fg:x="7300399215" fg:w="5844405650"/><text x="9.3082%" y="239.50">do_softirq..</text></g><g><title>handle_softirqs (5,738,947,939 samples, 7.12%)</title><rect x="9.1891%" y="213" width="7.1208%" height="15" fill="rgb(213,55,15)" fg:x="7405856926" fg:w="5738947939"/><text x="9.4391%" y="223.50">handle_sof..</text></g><g><title>__local_bh_enable_ip (5,951,938,507 samples, 7.39%)</title><rect x="8.9296%" y="245" width="7.3851%" height="15" fill="rgb(209,9,3)" fg:x="7196717579" fg:w="5951938507"/><text x="9.1796%" y="255.50">__local_bh..</text></g><g><title>__rcu_read_unlock (18,780,973 samples, 0.02%)</title><rect x="16.5214%" y="229" width="0.0233%" height="15" fill="rgb(230,59,30)" fg:x="13315291638" fg:w="18780973"/><text x="16.7714%" y="239.50"></text></g><g><title>ktime_get_with_offset (286,135,312 samples, 0.36%)</title><rect x="16.9601%" y="213" width="0.3550%" height="15" fill="rgb(209,121,21)" fg:x="13668821033" fg:w="286135312"/><text x="17.2101%" y="223.50"></text></g><g><title>read_tsc (163,614,848 samples, 0.20%)</title><rect x="17.1121%" y="197" width="0.2030%" height="15" fill="rgb(220,109,13)" fg:x="13791341497" fg:w="163614848"/><text x="17.3621%" y="207.50"></text></g><g><title>__copy_skb_header (59,960,346 samples, 0.07%)</title><rect x="17.5148%" y="197" width="0.0744%" height="15" fill="rgb(232,18,1)" fg:x="14115907256" fg:w="59960346"/><text x="17.7648%" y="207.50"></text></g><g><title>kmem_cache_alloc_noprof (267,832,042 samples, 0.33%)</title><rect x="17.5892%" y="197" width="0.3323%" height="15" fill="rgb(215,41,42)" fg:x="14175867602" fg:w="267832042"/><text x="17.8392%" y="207.50"></text></g><g><title>__memset (115,723,701 samples, 0.14%)</title><rect x="17.7779%" y="181" width="0.1436%" height="15" fill="rgb(224,123,36)" fg:x="14327975943" fg:w="115723701"/><text x="18.0279%" y="191.50"></text></g><g><title>skb_clone (496,531,085 samples, 0.62%)</title><rect x="17.3151%" y="213" width="0.6161%" height="15" fill="rgb(240,125,3)" fg:x="13954956345" fg:w="496531085"/><text x="17.5651%" y="223.50"></text></g><g><title>__packet_rcv_has_room (306,969,843 samples, 0.38%)</title><rect x="18.7270%" y="197" width="0.3809%" height="15" fill="rgb(205,98,50)" fg:x="15092852574" fg:w="306969843"/><text x="18.9770%" y="207.50"></text></g><g><title>packet_lookup_frame.isra.0 (232,379,396 samples, 0.29%)</title><rect x="18.8195%" y="181" width="0.2883%" height="15" fill="rgb(205,185,37)" fg:x="15167443021" fg:w="232379396"/><text x="19.0695%" y="191.50"></text></g><g><title>__rcu_read_unlock (23,282,374 samples, 0.03%)</title><rect x="19.1174%" y="197" width="0.0289%" height="15" fill="rgb(238,207,15)" fg:x="15407500542" fg:w="23282374"/><text x="19.3674%" y="207.50"></text></g><g><title>_raw_spin_lock (106,960,104 samples, 0.13%)</title><rect x="19.1463%" y="197" width="0.1327%" height="15" fill="rgb(213,199,42)" fg:x="15430782916" fg:w="106960104"/><text x="19.3963%" y="207.50"></text></g><g><title>eth_header_parse (39,406,333 samples, 0.05%)</title><rect x="19.2935%" y="197" width="0.0489%" height="15" fill="rgb(235,201,11)" fg:x="15549458471" fg:w="39406333"/><text x="19.5435%" y="207.50"></text></g><g><title>kfree_skbmem (22,450,683 samples, 0.03%)</title><rect x="19.3424%" y="197" width="0.0279%" height="15" fill="rgb(207,46,11)" fg:x="15588864804" fg:w="22450683"/><text x="19.5924%" y="207.50"></text></g><g><title>kmem_cache_free (194,018,503 samples, 0.24%)</title><rect x="19.3703%" y="197" width="0.2407%" height="15" fill="rgb(241,35,35)" fg:x="15611315487" fg:w="194018503"/><text x="19.6203%" y="207.50"></text></g><g><title>__memcg_slab_free_hook (75,274,839 samples, 0.09%)</title><rect x="19.5176%" y="181" width="0.0934%" height="15" fill="rgb(243,32,47)" fg:x="15730059151" fg:w="75274839"/><text x="19.7676%" y="191.50"></text></g><g><title>packet_lookup_frame.isra.0 (21,894,714 samples, 0.03%)</title><rect x="19.6110%" y="197" width="0.0272%" height="15" fill="rgb(247,202,23)" fg:x="15805333990" fg:w="21894714"/><text x="19.8610%" y="207.50"></text></g><g><title>skb_release_data (60,431,236 samples, 0.07%)</title><rect x="19.7279%" y="181" width="0.0750%" height="15" fill="rgb(219,102,11)" fg:x="15899520251" fg:w="60431236"/><text x="19.9779%" y="191.50"></text></g><g><title>sk_skb_reason_drop (143,207,986 samples, 0.18%)</title><rect x="19.6382%" y="197" width="0.1777%" height="15" fill="rgb(243,110,44)" fg:x="15827228704" fg:w="143207986"/><text x="19.8882%" y="207.50"></text></g><g><title>skb_release_head_state (10,485,203 samples, 0.01%)</title><rect x="19.8029%" y="181" width="0.0130%" height="15" fill="rgb(222,74,54)" fg:x="15959951487" fg:w="10485203"/><text x="20.0529%" y="191.50"></text></g><g><title>__memcpy (1,378,020,710 samples, 1.71%)</title><rect x="19.8658%" y="181" width="1.7098%" height="15" fill="rgb(216,99,12)" fg:x="16010689669" fg:w="1378020710"/><text x="20.1158%" y="191.50"></text></g><g><title>skb_copy_bits (1,425,428,376 samples, 1.77%)</title><rect x="19.8159%" y="197" width="1.7686%" height="15" fill="rgb(226,22,26)" fg:x="15970436690" fg:w="1425428376"/><text x="20.0659%" y="207.50"></text></g><g><title>__rcu_read_lock (10,719,315 samples, 0.01%)</title><rect x="21.6739%" y="181" width="0.0133%" height="15" fill="rgb(217,163,10)" fg:x="17467866767" fg:w="10719315"/><text x="21.9239%" y="191.50"></text></g><g><title>sock_def_readable (86,306,341 samples, 0.11%)</title><rect x="21.5845%" y="197" width="0.1071%" height="15" fill="rgb(213,25,53)" fg:x="17395865066" fg:w="86306341"/><text x="21.8345%" y="207.50"></text></g><g><title>dev_queue_xmit_nit (4,232,861,236 samples, 5.25%)</title><rect x="16.5447%" y="229" width="5.2521%" height="15" fill="rgb(252,105,26)" fg:x="13334072611" fg:w="4232861236"/><text x="16.7947%" y="239.50">dev_qu..</text></g><g><title>tpacket_rcv (3,111,676,879 samples, 3.86%)</title><rect x="17.9359%" y="213" width="3.8609%" height="15" fill="rgb(220,39,43)" fg:x="14455256968" fg:w="3111676879"/><text x="18.1859%" y="223.50">tpac..</text></g><g><title>tpacket_get_timestamp (73,795,486 samples, 0.09%)</title><rect x="21.7052%" y="197" width="0.0916%" height="15" fill="rgb(229,68,48)" fg:x="17493138361" fg:w="73795486"/><text x="21.9552%" y="207.50"></text></g><g><title>ns_to_timespec64 (25,695,559 samples, 0.03%)</title><rect x="21.7649%" y="181" width="0.0319%" height="15" fill="rgb(252,8,32)" fg:x="17541238288" fg:w="25695559"/><text x="22.0149%" y="191.50"></text></g><g><title>__list_add_valid_or_report (22,076,441 samples, 0.03%)</title><rect x="22.6544%" y="165" width="0.0274%" height="15" fill="rgb(223,20,43)" fg:x="18258097575" fg:w="22076441"/><text x="22.9044%" y="175.50"></text></g><g><title>__raw_spin_lock_irqsave (26,636,383 samples, 0.03%)</title><rect x="22.6818%" y="165" width="0.0331%" height="15" fill="rgb(229,81,49)" fg:x="18280174016" fg:w="26636383"/><text x="22.9318%" y="175.50"></text></g><g><title>_raw_spin_unlock_irqrestore (14,597,617 samples, 0.02%)</title><rect x="22.7148%" y="165" width="0.0181%" height="15" fill="rgb(236,28,36)" fg:x="18306810399" fg:w="14597617"/><text x="22.9648%" y="175.50"></text></g><g><title>raise_softirq_irqoff (66,248,651 samples, 0.08%)</title><rect x="22.7329%" y="165" width="0.0822%" height="15" fill="rgb(249,185,26)" fg:x="18321408016" fg:w="66248651"/><text x="22.9829%" y="175.50"></text></g><g><title>__raise_softirq_irqoff (14,049,648 samples, 0.02%)</title><rect x="22.7977%" y="149" width="0.0174%" height="15" fill="rgb(249,174,33)" fg:x="18373607019" fg:w="14049648"/><text x="23.0477%" y="159.50"></text></g><g><title>enqueue_to_backlog (439,293,465 samples, 0.55%)</title><rect x="22.2751%" y="181" width="0.5451%" height="15" fill="rgb(233,201,37)" fg:x="17952462992" fg:w="439293465"/><text x="22.5251%" y="191.50"></text></g><g><title>ktime_get_with_offset (180,674,580 samples, 0.22%)</title><rect x="22.8202%" y="181" width="0.2242%" height="15" fill="rgb(221,78,26)" fg:x="18391756457" fg:w="180674580"/><text x="23.0702%" y="191.50"></text></g><g><title>read_tsc (162,292,481 samples, 0.20%)</title><rect x="22.8430%" y="165" width="0.2014%" height="15" fill="rgb(250,127,30)" fg:x="18410138556" fg:w="162292481"/><text x="23.0930%" y="175.50"></text></g><g><title>__netif_rx (814,121,361 samples, 1.01%)</title><rect x="22.0389%" y="213" width="1.0101%" height="15" fill="rgb(230,49,44)" fg:x="17762030092" fg:w="814121361"/><text x="22.2889%" y="223.50"></text></g><g><title>netif_rx_internal (737,398,129 samples, 0.91%)</title><rect x="22.1340%" y="197" width="0.9150%" height="15" fill="rgb(229,67,23)" fg:x="17838753324" fg:w="737398129"/><text x="22.3840%" y="207.50"></text></g><g><title>eth_type_trans (48,540,424 samples, 0.06%)</title><rect x="23.0581%" y="213" width="0.0602%" height="15" fill="rgb(249,83,47)" fg:x="18583453974" fg:w="48540424"/><text x="23.3081%" y="223.50"></text></g><g><title>skb_clone_tx_timestamp (99,109,940 samples, 0.12%)</title><rect x="23.1183%" y="213" width="0.1230%" height="15" fill="rgb(215,43,3)" fg:x="18631994398" fg:w="99109940"/><text x="23.3683%" y="223.50"></text></g><g><title>sock_wfree (270,535,800 samples, 0.34%)</title><rect x="23.2413%" y="213" width="0.3357%" height="15" fill="rgb(238,154,13)" fg:x="18731104338" fg:w="270535800"/><text x="23.4913%" y="223.50"></text></g><g><title>sock_def_write_space (118,978,614 samples, 0.15%)</title><rect x="23.4293%" y="197" width="0.1476%" height="15" fill="rgb(219,56,2)" fg:x="18882661524" fg:w="118978614"/><text x="23.6793%" y="207.50"></text></g><g><title>__rcu_read_lock (11,167,410 samples, 0.01%)</title><rect x="23.5631%" y="181" width="0.0139%" height="15" fill="rgb(233,0,4)" fg:x="18990472728" fg:w="11167410"/><text x="23.8131%" y="191.50"></text></g><g><title>dev_hard_start_xmit (5,864,869,345 samples, 7.28%)</title><rect x="16.3146%" y="245" width="7.2770%" height="15" fill="rgb(235,30,7)" fg:x="13148656086" fg:w="5864869345"/><text x="16.5646%" y="255.50">dev_hard_s..</text></g><g><title>loopback_xmit (1,446,591,584 samples, 1.79%)</title><rect x="21.7968%" y="229" width="1.7949%" height="15" fill="rgb(250,79,13)" fg:x="17566933847" fg:w="1446591584"/><text x="22.0468%" y="239.50">l..</text></g><g><title>srso_alias_return_thunk (11,885,293 samples, 0.01%)</title><rect x="23.5769%" y="213" width="0.0147%" height="15" fill="rgb(211,146,34)" fg:x="19001640138" fg:w="11885293"/><text x="23.8269%" y="223.50"></text></g><g><title>srso_alias_safe_ret (11,885,293 samples, 0.01%)</title><rect x="23.5769%" y="197" width="0.0147%" height="15" fill="rgb(228,22,38)" fg:x="19001640138" fg:w="11885293"/><text x="23.8269%" y="207.50"></text></g><g><title>netdev_core_pick_tx (11,682,222 samples, 0.01%)</title><rect x="23.5917%" y="245" width="0.0145%" height="15" fill="rgb(235,168,5)" fg:x="19013525431" fg:w="11682222"/><text x="23.8417%" y="255.50"></text></g><g><title>validate_xmit_skb (125,238,169 samples, 0.16%)</title><rect x="23.6109%" y="245" width="0.1554%" height="15" fill="rgb(221,155,16)" fg:x="19028983107" fg:w="125238169"/><text x="23.8609%" y="255.50"></text></g><g><title>netif_skb_features (69,773,172 samples, 0.09%)</title><rect x="23.6797%" y="229" width="0.0866%" height="15" fill="rgb(215,215,53)" fg:x="19084448104" fg:w="69773172"/><text x="23.9297%" y="239.50"></text></g><g><title>__dev_queue_xmit (12,374,199,434 samples, 15.35%)</title><rect x="8.4343%" y="261" width="15.3537%" height="15" fill="rgb(223,4,10)" fg:x="6797544204" fg:w="12374199434"/><text x="8.6843%" y="271.50">__dev_queue_xmit</text></g><g><title>validate_xmit_xfrm (17,522,362 samples, 0.02%)</title><rect x="23.7663%" y="245" width="0.0217%" height="15" fill="rgb(234,103,6)" fg:x="19154221276" fg:w="17522362"/><text x="24.0163%" y="255.50"></text></g><g><title>dev_get_by_index (140,903,718 samples, 0.17%)</title><rect x="23.7977%" y="261" width="0.1748%" height="15" fill="rgb(227,97,0)" fg:x="19179521063" fg:w="140903718"/><text x="24.0477%" y="271.50"></text></g><g><title>__rcu_read_lock (18,429,464 samples, 0.02%)</title><rect x="24.6088%" y="229" width="0.0229%" height="15" fill="rgb(234,150,53)" fg:x="19833261126" fg:w="18429464"/><text x="24.8588%" y="239.50"></text></g><g><title>__skb_flow_dissect (421,390,862 samples, 0.52%)</title><rect x="24.2019%" y="245" width="0.5229%" height="15" fill="rgb(228,201,54)" fg:x="19505328843" fg:w="421390862"/><text x="24.4519%" y="255.50"></text></g><g><title>skb_copy_bits (66,813,836 samples, 0.08%)</title><rect x="24.6419%" y="229" width="0.0829%" height="15" fill="rgb(222,22,37)" fg:x="19859905869" fg:w="66813836"/><text x="24.8919%" y="239.50"></text></g><g><title>__memcpy (10,708,427 samples, 0.01%)</title><rect x="24.7115%" y="213" width="0.0133%" height="15" fill="rgb(237,53,32)" fg:x="19916011278" fg:w="10708427"/><text x="24.9615%" y="223.50"></text></g><g><title>eth_header_parse_protocol (59,312,092 samples, 0.07%)</title><rect x="24.7248%" y="245" width="0.0736%" height="15" fill="rgb(233,25,53)" fg:x="19926719705" fg:w="59312092"/><text x="24.9748%" y="255.50"></text></g><g><title>packet_parse_headers (669,437,748 samples, 0.83%)</title><rect x="23.9725%" y="261" width="0.8306%" height="15" fill="rgb(210,40,34)" fg:x="19320424781" fg:w="669437748"/><text x="24.2225%" y="271.50"></text></g><g><title>packet_xmit (22,332,155 samples, 0.03%)</title><rect x="24.8031%" y="261" width="0.0277%" height="15" fill="rgb(241,220,44)" fg:x="19989862529" fg:w="22332155"/><text x="25.0531%" y="271.50"></text></g><g><title>__check_heap_object (27,024,388 samples, 0.03%)</title><rect x="25.0423%" y="229" width="0.0335%" height="15" fill="rgb(235,28,35)" fg:x="20182617644" fg:w="27024388"/><text x="25.2923%" y="239.50"></text></g><g><title>__virt_addr_valid (153,904,545 samples, 0.19%)</title><rect x="25.1640%" y="213" width="0.1910%" height="15" fill="rgb(210,56,17)" fg:x="20280751754" fg:w="153904545"/><text x="25.4140%" y="223.50"></text></g><g><title>is_vmalloc_addr (30,628,831 samples, 0.04%)</title><rect x="25.3550%" y="213" width="0.0380%" height="15" fill="rgb(224,130,29)" fg:x="20434658864" fg:w="30628831"/><text x="25.6050%" y="223.50"></text></g><g><title>check_heap_object (259,570,429 samples, 0.32%)</title><rect x="25.0758%" y="229" width="0.3221%" height="15" fill="rgb(235,212,8)" fg:x="20209642032" fg:w="259570429"/><text x="25.3258%" y="239.50"></text></g><g><title>__check_object_size.part.0 (358,832,980 samples, 0.45%)</title><rect x="24.9574%" y="245" width="0.4452%" height="15" fill="rgb(223,33,50)" fg:x="20114190248" fg:w="358832980"/><text x="25.2074%" y="255.50"></text></g><g><title>_copy_from_iter (257,764,249 samples, 0.32%)</title><rect x="25.4026%" y="245" width="0.3198%" height="15" fill="rgb(219,149,13)" fg:x="20473023228" fg:w="257764249"/><text x="25.6526%" y="255.50"></text></g><g><title>_copy_from_iter (3,744,490,350 samples, 4.65%)</title><rect x="26.0930%" y="229" width="4.6461%" height="15" fill="rgb(250,156,29)" fg:x="21029410016" fg:w="3744490350"/><text x="26.3430%" y="239.50">_copy..</text></g><g><title>copy_page_from_iter (4,049,823,879 samples, 5.02%)</title><rect x="25.7224%" y="245" width="5.0250%" height="15" fill="rgb(216,193,19)" fg:x="20730787477" fg:w="4049823879"/><text x="25.9724%" y="255.50">copy_p..</text></g><g><title>skb_copy_datagram_from_iter (4,775,820,094 samples, 5.93%)</title><rect x="24.8308%" y="261" width="5.9258%" height="15" fill="rgb(216,135,14)" fg:x="20012194684" fg:w="4775820094"/><text x="25.0808%" y="271.50">skb_copy..</text></g><g><title>__memset (75,266,053 samples, 0.09%)</title><rect x="31.7385%" y="181" width="0.0934%" height="15" fill="rgb(241,47,5)" fg:x="25579385901" fg:w="75266053"/><text x="31.9885%" y="191.50"></text></g><g><title>kmem_cache_alloc_node_noprof (220,367,274 samples, 0.27%)</title><rect x="31.5682%" y="197" width="0.2734%" height="15" fill="rgb(233,42,35)" fg:x="25442103787" fg:w="220367274"/><text x="31.8182%" y="207.50"></text></g><g><title>kmalloc_reserve (302,065,649 samples, 0.37%)</title><rect x="31.4711%" y="213" width="0.3748%" height="15" fill="rgb(231,13,6)" fg:x="25363882992" fg:w="302065649"/><text x="31.7211%" y="223.50"></text></g><g><title>__memset (107,151,988 samples, 0.13%)</title><rect x="32.0625%" y="197" width="0.1330%" height="15" fill="rgb(207,181,40)" fg:x="25840485415" fg:w="107151988"/><text x="32.3125%" y="207.50"></text></g><g><title>kmem_cache_alloc_node_noprof (285,070,664 samples, 0.35%)</title><rect x="31.8459%" y="213" width="0.3537%" height="15" fill="rgb(254,173,49)" fg:x="25665948641" fg:w="285070664"/><text x="32.0959%" y="223.50"></text></g><g><title>__alloc_skb (874,540,332 samples, 1.09%)</title><rect x="31.1192%" y="229" width="1.0851%" height="15" fill="rgb(221,1,38)" fg:x="25080230955" fg:w="874540332"/><text x="31.3692%" y="239.50"></text></g><g><title>__next_zones_zonelist (63,731,187 samples, 0.08%)</title><rect x="32.4657%" y="181" width="0.0791%" height="15" fill="rgb(206,124,46)" fg:x="26165479644" fg:w="63731187"/><text x="32.7157%" y="191.50"></text></g><g><title>__zone_watermark_ok (46,894,493 samples, 0.06%)</title><rect x="32.7555%" y="165" width="0.0582%" height="15" fill="rgb(249,21,11)" fg:x="26399012957" fg:w="46894493"/><text x="33.0055%" y="175.50"></text></g><g><title>clear_page_erms (1,858,131,949 samples, 2.31%)</title><rect x="33.2496%" y="149" width="2.3055%" height="15" fill="rgb(222,201,40)" fg:x="26797233631" fg:w="1858131949"/><text x="33.4996%" y="159.50">c..</text></g><g><title>post_alloc_hook (2,210,045,719 samples, 2.74%)</title><rect x="32.8176%" y="165" width="2.7422%" height="15" fill="rgb(235,61,29)" fg:x="26449073920" fg:w="2210045719"/><text x="33.0676%" y="175.50">po..</text></g><g><title>prep_compound_page (90,486,375 samples, 0.11%)</title><rect x="35.5598%" y="165" width="0.1123%" height="15" fill="rgb(219,207,3)" fg:x="28659119639" fg:w="90486375"/><text x="35.8098%" y="175.50"></text></g><g><title>__rmqueue_pcplist (170,364,612 samples, 0.21%)</title><rect x="35.8559%" y="133" width="0.2114%" height="15" fill="rgb(222,56,46)" fg:x="28897802107" fg:w="170364612"/><text x="36.1059%" y="143.50"></text></g><g><title>__list_del_entry_valid_or_report (44,530,132 samples, 0.06%)</title><rect x="36.0121%" y="117" width="0.0553%" height="15" fill="rgb(239,76,54)" fg:x="29023636587" fg:w="44530132"/><text x="36.2621%" y="127.50"></text></g><g><title>_raw_spin_trylock (34,991,130 samples, 0.04%)</title><rect x="36.0673%" y="133" width="0.0434%" height="15" fill="rgb(231,124,27)" fg:x="29068166719" fg:w="34991130"/><text x="36.3173%" y="143.50"></text></g><g><title>rmqueue.isra.0 (360,804,233 samples, 0.45%)</title><rect x="35.6721%" y="165" width="0.4477%" height="15" fill="rgb(249,195,6)" fg:x="28749606014" fg:w="360804233"/><text x="35.9221%" y="175.50"></text></g><g><title>rmqueue_pcplist (308,155,143 samples, 0.38%)</title><rect x="35.7374%" y="149" width="0.3824%" height="15" fill="rgb(237,174,47)" fg:x="28802255104" fg:w="308155143"/><text x="35.9874%" y="159.50"></text></g><g><title>__alloc_frozen_pages_noprof (3,062,064,748 samples, 3.80%)</title><rect x="32.3351%" y="197" width="3.7994%" height="15" fill="rgb(206,201,31)" fg:x="26060195702" fg:w="3062064748"/><text x="32.5851%" y="207.50">__al..</text></g><g><title>get_page_from_freelist (2,893,049,619 samples, 3.59%)</title><rect x="32.5448%" y="181" width="3.5897%" height="15" fill="rgb(231,57,52)" fg:x="26229210831" fg:w="2893049619"/><text x="32.7948%" y="191.50">get_..</text></g><g><title>srso_alias_return_thunk (11,850,203 samples, 0.01%)</title><rect x="36.1197%" y="165" width="0.0147%" height="15" fill="rgb(248,177,22)" fg:x="29110410247" fg:w="11850203"/><text x="36.3697%" y="175.50"></text></g><g><title>alloc_skb_with_frags (4,231,797,166 samples, 5.25%)</title><rect x="30.9344%" y="245" width="5.2507%" height="15" fill="rgb(215,211,37)" fg:x="24931290181" fg:w="4231797166"/><text x="31.1844%" y="255.50">alloc_..</text></g><g><title>alloc_pages_noprof (3,208,316,060 samples, 3.98%)</title><rect x="32.2043%" y="229" width="3.9808%" height="15" fill="rgb(241,128,51)" fg:x="25954771287" fg:w="3208316060"/><text x="32.4543%" y="239.50">allo..</text></g><g><title>alloc_pages_mpol (3,159,389,173 samples, 3.92%)</title><rect x="32.2650%" y="213" width="3.9201%" height="15" fill="rgb(227,165,31)" fg:x="26003698174" fg:w="3159389173"/><text x="32.5150%" y="223.50">allo..</text></g><g><title>policy_nodemask (40,826,897 samples, 0.05%)</title><rect x="36.1345%" y="197" width="0.0507%" height="15" fill="rgb(228,167,24)" fg:x="29122260450" fg:w="40826897"/><text x="36.3845%" y="207.50"></text></g><g><title>sock_alloc_send_pskb (4,447,081,240 samples, 5.52%)</title><rect x="30.7614%" y="261" width="5.5179%" height="15" fill="rgb(228,143,12)" fg:x="24791858574" fg:w="4447081240"/><text x="31.0114%" y="271.50">sock_al..</text></g><g><title>skb_set_owner_w (75,852,467 samples, 0.09%)</title><rect x="36.1851%" y="245" width="0.0941%" height="15" fill="rgb(249,149,8)" fg:x="29163087347" fg:w="75852467"/><text x="36.4351%" y="255.50"></text></g><g><title>srso_alias_return_thunk (17,997,031 samples, 0.02%)</title><rect x="36.2792%" y="261" width="0.0223%" height="15" fill="rgb(243,35,44)" fg:x="29238939814" fg:w="17997031"/><text x="36.5292%" y="271.50"></text></g><g><title>packet_snd (22,953,623,294 samples, 28.48%)</title><rect x="7.8352%" y="277" width="28.4805%" height="15" fill="rgb(246,89,9)" fg:x="6314684284" fg:w="22953623294"/><text x="8.0852%" y="287.50">packet_snd</text></g><g><title>srso_alias_safe_ret (11,370,733 samples, 0.01%)</title><rect x="36.3016%" y="261" width="0.0141%" height="15" fill="rgb(233,213,13)" fg:x="29256936845" fg:w="11370733"/><text x="36.5516%" y="271.50"></text></g><g><title>avc_has_perm_noaudit (52,746,721 samples, 0.07%)</title><rect x="36.6836%" y="229" width="0.0654%" height="15" fill="rgb(233,141,41)" fg:x="29564806773" fg:w="52746721"/><text x="36.9336%" y="239.50"></text></g><g><title>avc_lookup (26,142,548 samples, 0.03%)</title><rect x="36.7166%" y="213" width="0.0324%" height="15" fill="rgb(239,167,4)" fg:x="29591410946" fg:w="26142548"/><text x="36.9666%" y="223.50"></text></g><g><title>selinux_socket_sendmsg (310,731,693 samples, 0.39%)</title><rect x="36.3683%" y="261" width="0.3856%" height="15" fill="rgb(209,217,16)" fg:x="29310757659" fg:w="310731693"/><text x="36.6183%" y="271.50"></text></g><g><title>avc_has_perm (97,131,432 samples, 0.12%)</title><rect x="36.6334%" y="245" width="0.1205%" height="15" fill="rgb(219,88,35)" fg:x="29524357920" fg:w="97131432"/><text x="36.8834%" y="255.50"></text></g><g><title>security_socket_sendmsg (355,777,106 samples, 0.44%)</title><rect x="36.3157%" y="277" width="0.4414%" height="15" fill="rgb(220,193,23)" fg:x="29268307578" fg:w="355777106"/><text x="36.5657%" y="287.50"></text></g><g><title>__sys_sendto (24,096,220,976 samples, 29.90%)</title><rect x="6.8589%" y="293" width="29.8982%" height="15" fill="rgb(230,90,52)" fg:x="5527902189" fg:w="24096220976"/><text x="7.1089%" y="303.50">__sys_sendto</text></g><g><title>__x64_sys_sendto (24,125,878,823 samples, 29.94%)</title><rect x="6.8265%" y="309" width="29.9350%" height="15" fill="rgb(252,106,19)" fg:x="5501762376" fg:w="24125878823"/><text x="7.0765%" y="319.50">__x64_sys_sendto</text></g><g><title>srso_alias_return_thunk (19,074,188 samples, 0.02%)</title><rect x="36.7615%" y="309" width="0.0237%" height="15" fill="rgb(206,74,20)" fg:x="29627641199" fg:w="19074188"/><text x="37.0115%" y="319.50"></text></g><g><title>srso_alias_safe_ret (19,074,188 samples, 0.02%)</title><rect x="36.7615%" y="293" width="0.0237%" height="15" fill="rgb(230,138,44)" fg:x="29627641199" fg:w="19074188"/><text x="37.0115%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (144,213,091 samples, 0.18%)</title><rect x="36.7852%" y="309" width="0.1789%" height="15" fill="rgb(235,182,43)" fg:x="29646715387" fg:w="144213091"/><text x="37.0352%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (15,737,077 samples, 0.02%)</title><rect x="36.9446%" y="293" width="0.0195%" height="15" fill="rgb(242,16,51)" fg:x="29775191401" fg:w="15737077"/><text x="37.1946%" y="303.50"></text></g><g><title>do_syscall_64 (24,433,235,750 samples, 30.32%)</title><rect x="6.6571%" y="325" width="30.3164%" height="15" fill="rgb(248,9,4)" fg:x="5365219407" fg:w="24433235750"/><text x="6.9071%" y="335.50">do_syscall_64</text></g><g><title>entry_SYSCALL_64_after_hwframe (24,588,703,674 samples, 30.51%)</title><rect x="6.5536%" y="341" width="30.5093%" height="15" fill="rgb(210,31,22)" fg:x="5281843364" fg:w="24588703674"/><text x="6.8036%" y="351.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>srso_alias_return_thunk (72,091,881 samples, 0.09%)</title><rect x="36.9735%" y="325" width="0.0895%" height="15" fill="rgb(239,54,39)" fg:x="29798455157" fg:w="72091881"/><text x="37.2235%" y="335.50"></text></g><g><title>srso_alias_safe_ret (56,746,493 samples, 0.07%)</title><rect x="36.9925%" y="309" width="0.0704%" height="15" fill="rgb(230,99,41)" fg:x="29813800545" fg:w="56746493"/><text x="37.2425%" y="319.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (1,057,023,344 samples, 1.31%)</title><rect x="37.0629%" y="341" width="1.3115%" height="15" fill="rgb(253,106,12)" fg:x="29870547038" fg:w="1057023344"/><text x="37.3129%" y="351.50"></text></g><g><title>&lt;pnet_datalink::backend::DataLinkSenderImpl as pnet_datalink::DataLinkSender&gt;::send_to (29,205,529,282 samples, 36.24%)</title><rect x="2.2165%" y="421" width="36.2378%" height="15" fill="rgb(213,46,41)" fg:x="1786347062" fg:w="29205529282"/><text x="2.4665%" y="431.50">&lt;pnet_datalink::backend::DataLinkSenderImpl as pnet_datalin..</text></g><g><title>pnet_sys::send_to (26,168,659,610 samples, 32.47%)</title><rect x="5.9846%" y="405" width="32.4697%" height="15" fill="rgb(215,133,35)" fg:x="4823216734" fg:w="26168659610"/><text x="6.2346%" y="415.50">pnet_sys::send_to</text></g><g><title>__libc_sendto (25,964,089,949 samples, 32.22%)</title><rect x="6.2384%" y="389" width="32.2158%" height="15" fill="rgb(213,28,5)" fg:x="5027786395" fg:w="25964089949"/><text x="6.4884%" y="399.50">__libc_sendto</text></g><g><title>__syscall_cancel (25,910,095,095 samples, 32.15%)</title><rect x="6.3054%" y="373" width="32.1488%" height="15" fill="rgb(215,77,49)" fg:x="5081781249" fg:w="25910095095"/><text x="6.5554%" y="383.50">__syscall_cancel</text></g><g><title>__internal_syscall_cancel (25,853,994,069 samples, 32.08%)</title><rect x="6.3750%" y="357" width="32.0792%" height="15" fill="rgb(248,100,22)" fg:x="5137882275" fg:w="25853994069"/><text x="6.6250%" y="367.50">__internal_syscall_cancel</text></g><g><title>syscall_return_via_sysret (64,305,962 samples, 0.08%)</title><rect x="38.3745%" y="341" width="0.0798%" height="15" fill="rgb(208,67,9)" fg:x="30927570382" fg:w="64305962"/><text x="38.6245%" y="351.50"></text></g><g><title>[unknown] (15,295,190 samples, 0.02%)</title><rect x="38.5242%" y="405" width="0.0190%" height="15" fill="rgb(219,133,21)" fg:x="31048224480" fg:w="15295190"/><text x="38.7742%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (15,295,190 samples, 0.02%)</title><rect x="38.5242%" y="389" width="0.0190%" height="15" fill="rgb(246,46,29)" fg:x="31048224480" fg:w="15295190"/><text x="38.7742%" y="399.50"></text></g><g><title>__libc_calloc (72,599,792 samples, 0.09%)</title><rect x="38.4678%" y="421" width="0.0901%" height="15" fill="rgb(246,185,52)" fg:x="31002807996" fg:w="72599792"/><text x="38.7178%" y="431.50"></text></g><g><title>__memcmp_avx2_movbe (209,498,437 samples, 0.26%)</title><rect x="38.5626%" y="421" width="0.2599%" height="15" fill="rgb(252,136,11)" fg:x="31079169647" fg:w="209498437"/><text x="38.8126%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (14,840,056 samples, 0.02%)</title><rect x="42.1011%" y="405" width="0.0184%" height="15" fill="rgb(219,138,53)" fg:x="33931031313" fg:w="14840056"/><text x="42.3511%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (14,840,056 samples, 0.02%)</title><rect x="42.1011%" y="389" width="0.0184%" height="15" fill="rgb(211,51,23)" fg:x="33931031313" fg:w="14840056"/><text x="42.3511%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (11,571,353 samples, 0.01%)</title><rect x="42.1052%" y="373" width="0.0144%" height="15" fill="rgb(247,221,28)" fg:x="33934300016" fg:w="11571353"/><text x="42.3552%" y="383.50"></text></g><g><title>hrtimer_interrupt (11,571,353 samples, 0.01%)</title><rect x="42.1052%" y="357" width="0.0144%" height="15" fill="rgb(251,222,45)" fg:x="33934300016" fg:w="11571353"/><text x="42.3552%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,657,205,529 samples, 3.30%)</title><rect x="38.8225%" y="421" width="3.2970%" height="15" fill="rgb(217,162,53)" fg:x="31288668084" fg:w="2657205529"/><text x="39.0725%" y="431.50">__m..</text></g><g><title>__memset_avx2_unaligned_erms (1,664,961,639 samples, 2.07%)</title><rect x="42.1195%" y="421" width="2.0659%" height="15" fill="rgb(229,93,14)" fg:x="33945873613" fg:w="1664961639"/><text x="42.3695%" y="431.50">_..</text></g><g><title>__rustc::__rust_alloc (15,383,063 samples, 0.02%)</title><rect x="44.1854%" y="421" width="0.0191%" height="15" fill="rgb(209,67,49)" fg:x="35610837629" fg:w="15383063"/><text x="44.4354%" y="431.50"></text></g><g><title>__rustc::__rust_dealloc (23,805,478 samples, 0.03%)</title><rect x="44.2045%" y="421" width="0.0295%" height="15" fill="rgb(213,87,29)" fg:x="35626220692" fg:w="23805478"/><text x="44.4545%" y="431.50"></text></g><g><title>cfree@GLIBC_2.2.5 (146,491,243 samples, 0.18%)</title><rect x="44.2483%" y="421" width="0.1818%" height="15" fill="rgb(205,151,52)" fg:x="35661543583" fg:w="146491243"/><text x="44.4983%" y="431.50"></text></g><g><title>_int_free_merge_chunk (10,889,892 samples, 0.01%)</title><rect x="44.4165%" y="405" width="0.0135%" height="15" fill="rgb(253,215,39)" fg:x="35797144934" fg:w="10889892"/><text x="44.6665%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;&gt; (50,418,723 samples, 0.06%)</title><rect x="44.4301%" y="421" width="0.0626%" height="15" fill="rgb(221,220,41)" fg:x="35808034826" fg:w="50418723"/><text x="44.6801%" y="431.50"></text></g><g><title>malloc (31,432,617 samples, 0.04%)</title><rect x="44.4926%" y="421" width="0.0390%" height="15" fill="rgb(218,133,21)" fg:x="35858453549" fg:w="31432617"/><text x="44.7426%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (15,055,821 samples, 0.02%)</title><rect x="44.6516%" y="373" width="0.0187%" height="15" fill="rgb(221,193,43)" fg:x="35986565697" fg:w="15055821"/><text x="44.9016%" y="383.50"></text></g><g><title>&lt;packet_rewriter::network::packet::IpPacket as packet_rewriter::network::packet::NetworkPacket&gt;::get_mut_payload (41,521,173 samples, 0.05%)</title><rect x="44.6468%" y="389" width="0.0515%" height="15" fill="rgb(240,128,52)" fg:x="35982725353" fg:w="41521173"/><text x="44.8968%" y="399.50"></text></g><g><title>pnet_packet::ipv4::ipv4_options_length (22,625,008 samples, 0.03%)</title><rect x="44.6703%" y="373" width="0.0281%" height="15" fill="rgb(253,114,12)" fg:x="36001621518" fg:w="22625008"/><text x="44.9203%" y="383.50"></text></g><g><title>&lt;packet_rewriter::network::packet::IpPacket as packet_rewriter::network::packet::NetworkPacket&gt;::get_next_layer (59,555,431 samples, 0.07%)</title><rect x="44.6468%" y="405" width="0.0739%" height="15" fill="rgb(215,223,47)" fg:x="35982725353" fg:w="59555431"/><text x="44.8968%" y="415.50"></text></g><g><title>packet_rewriter::network::packet::IpPacket::get_transport_packet_ipv4_addr (14,836,980 samples, 0.02%)</title><rect x="44.7023%" y="389" width="0.0184%" height="15" fill="rgb(248,225,23)" fg:x="36027443804" fg:w="14836980"/><text x="44.9523%" y="399.50"></text></g><g><title>packet_rewriter::network::packet::IpPacket::rewrite (48,330,611 samples, 0.06%)</title><rect x="44.7304%" y="405" width="0.0600%" height="15" fill="rgb(250,108,0)" fg:x="36050082995" fg:w="48330611"/><text x="44.9804%" y="415.50"></text></g><g><title>pnet_packet::ipv4::checksum (18,733,083 samples, 0.02%)</title><rect x="44.7671%" y="389" width="0.0232%" height="15" fill="rgb(228,208,7)" fg:x="36079680523" fg:w="18733083"/><text x="45.0171%" y="399.50"></text></g><g><title>packet_rewriter::network::packet::IpPacket::rewrite (11,028,903 samples, 0.01%)</title><rect x="44.7945%" y="389" width="0.0137%" height="15" fill="rgb(244,45,10)" fg:x="36101785227" fg:w="11028903"/><text x="45.0445%" y="399.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_tcp (19,086,494 samples, 0.02%)</title><rect x="44.8082%" y="389" width="0.0237%" height="15" fill="rgb(207,125,25)" fg:x="36112814130" fg:w="19086494"/><text x="45.0582%" y="399.50"></text></g><g><title>asm_common_interrupt (17,092,970 samples, 0.02%)</title><rect x="92.0520%" y="357" width="0.0212%" height="15" fill="rgb(210,195,18)" fg:x="74188586506" fg:w="17092970"/><text x="92.3020%" y="367.50"></text></g><g><title>common_interrupt (17,092,970 samples, 0.02%)</title><rect x="92.0520%" y="341" width="0.0212%" height="15" fill="rgb(249,80,12)" fg:x="74188586506" fg:w="17092970"/><text x="92.3020%" y="351.50"></text></g><g><title>__irq_exit_rcu (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="325" width="0.0169%" height="15" fill="rgb(221,65,9)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="335.50"></text></g><g><title>handle_softirqs (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="309" width="0.0169%" height="15" fill="rgb(235,49,36)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="319.50"></text></g><g><title>tasklet_hi_action (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="293" width="0.0169%" height="15" fill="rgb(225,32,20)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="303.50"></text></g><g><title>bh_worker (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="277" width="0.0169%" height="15" fill="rgb(215,141,46)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="287.50"></text></g><g><title>process_one_work (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="261" width="0.0169%" height="15" fill="rgb(250,160,47)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="271.50"></text></g><g><title>usb_giveback_urb_bh (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="245" width="0.0169%" height="15" fill="rgb(216,222,40)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="255.50"></text></g><g><title>__usb_hcd_giveback_urb (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="229" width="0.0169%" height="15" fill="rgb(234,217,39)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="239.50"></text></g><g><title>hid_irq_in (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="213" width="0.0169%" height="15" fill="rgb(207,178,40)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="223.50"></text></g><g><title>hid_input_report (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="197" width="0.0169%" height="15" fill="rgb(221,136,13)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="207.50"></text></g><g><title>__hid_input_report (13,625,715 samples, 0.02%)</title><rect x="92.0564%" y="181" width="0.0169%" height="15" fill="rgb(249,199,10)" fg:x="74192053761" fg:w="13625715"/><text x="92.3064%" y="191.50"></text></g><g><title>logi_dj_raw_event (10,201,582 samples, 0.01%)</title><rect x="92.0606%" y="165" width="0.0127%" height="15" fill="rgb(249,222,13)" fg:x="74195477894" fg:w="10201582"/><text x="92.3106%" y="175.50"></text></g><g><title>logi_dj_recv_forward_input_report (10,201,582 samples, 0.01%)</title><rect x="92.0606%" y="149" width="0.0127%" height="15" fill="rgb(244,185,38)" fg:x="74195477894" fg:w="10201582"/><text x="92.3106%" y="159.50"></text></g><g><title>logi_dj_recv_forward_report.isra.0 (10,201,582 samples, 0.01%)</title><rect x="92.0606%" y="133" width="0.0127%" height="15" fill="rgb(236,202,9)" fg:x="74195477894" fg:w="10201582"/><text x="92.3106%" y="143.50"></text></g><g><title>hid_input_report (10,201,582 samples, 0.01%)</title><rect x="92.0606%" y="117" width="0.0127%" height="15" fill="rgb(250,229,37)" fg:x="74195477894" fg:w="10201582"/><text x="92.3106%" y="127.50"></text></g><g><title>__hid_input_report (10,201,582 samples, 0.01%)</title><rect x="92.0606%" y="101" width="0.0127%" height="15" fill="rgb(206,174,23)" fg:x="74195477894" fg:w="10201582"/><text x="92.3106%" y="111.50"></text></g><g><title>hid_report_raw_event (10,201,582 samples, 0.01%)</title><rect x="92.0606%" y="85" width="0.0127%" height="15" fill="rgb(211,33,43)" fg:x="74195477894" fg:w="10201582"/><text x="92.3106%" y="95.50"></text></g><g><title>rcu_core (12,676,857 samples, 0.02%)</title><rect x="92.0821%" y="293" width="0.0157%" height="15" fill="rgb(245,58,50)" fg:x="74212775557" fg:w="12676857"/><text x="92.3321%" y="303.50"></text></g><g><title>rcu_do_batch (8,826,864 samples, 0.01%)</title><rect x="92.0868%" y="277" width="0.0110%" height="15" fill="rgb(244,68,36)" fg:x="74216625550" fg:w="8826864"/><text x="92.3368%" y="287.50"></text></g><g><title>__irq_exit_rcu (27,045,809 samples, 0.03%)</title><rect x="92.0773%" y="325" width="0.0336%" height="15" fill="rgb(232,229,15)" fg:x="74208975422" fg:w="27045809"/><text x="92.3273%" y="335.50"></text></g><g><title>handle_softirqs (27,045,809 samples, 0.03%)</title><rect x="92.0773%" y="309" width="0.0336%" height="15" fill="rgb(254,30,23)" fg:x="74208975422" fg:w="27045809"/><text x="92.3273%" y="319.50"></text></g><g><title>task_tick_fair (18,963,106 samples, 0.02%)</title><rect x="92.1843%" y="229" width="0.0235%" height="15" fill="rgb(235,160,14)" fg:x="74295144615" fg:w="18963106"/><text x="92.4343%" y="239.50"></text></g><g><title>update_process_times (50,713,640 samples, 0.06%)</title><rect x="92.1541%" y="261" width="0.0629%" height="15" fill="rgb(212,155,44)" fg:x="74270819185" fg:w="50713640"/><text x="92.4041%" y="271.50"></text></g><g><title>sched_tick (40,272,454 samples, 0.05%)</title><rect x="92.1670%" y="245" width="0.0500%" height="15" fill="rgb(226,2,50)" fg:x="74281260371" fg:w="40272454"/><text x="92.4170%" y="255.50"></text></g><g><title>__hrtimer_run_queues (96,133,370 samples, 0.12%)</title><rect x="92.1157%" y="293" width="0.1193%" height="15" fill="rgb(234,177,6)" fg:x="74239854293" fg:w="96133370"/><text x="92.3657%" y="303.50"></text></g><g><title>tick_nohz_handler (88,665,418 samples, 0.11%)</title><rect x="92.1249%" y="277" width="0.1100%" height="15" fill="rgb(217,24,9)" fg:x="74247322245" fg:w="88665418"/><text x="92.3749%" y="287.50"></text></g><g><title>update_wall_time (14,454,838 samples, 0.02%)</title><rect x="92.2170%" y="261" width="0.0179%" height="15" fill="rgb(220,13,46)" fg:x="74321532825" fg:w="14454838"/><text x="92.4670%" y="271.50"></text></g><g><title>timekeeping_advance (14,454,838 samples, 0.02%)</title><rect x="92.2170%" y="245" width="0.0179%" height="15" fill="rgb(239,221,27)" fg:x="74321532825" fg:w="14454838"/><text x="92.4670%" y="255.50"></text></g><g><title>timekeeping_update_from_shadow.constprop.0 (14,454,838 samples, 0.02%)</title><rect x="92.2170%" y="229" width="0.0179%" height="15" fill="rgb(222,198,25)" fg:x="74321532825" fg:w="14454838"/><text x="92.4670%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (137,820,979 samples, 0.17%)</title><rect x="92.0733%" y="357" width="0.1710%" height="15" fill="rgb(211,99,13)" fg:x="74205679476" fg:w="137820979"/><text x="92.3233%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (134,525,033 samples, 0.17%)</title><rect x="92.0773%" y="341" width="0.1669%" height="15" fill="rgb(232,111,31)" fg:x="74208975422" fg:w="134525033"/><text x="92.3273%" y="351.50"></text></g><g><title>__sysvec_apic_timer_interrupt (107,479,224 samples, 0.13%)</title><rect x="92.1109%" y="325" width="0.1334%" height="15" fill="rgb(245,82,37)" fg:x="74236021231" fg:w="107479224"/><text x="92.3609%" y="335.50"></text></g><g><title>hrtimer_interrupt (107,479,224 samples, 0.13%)</title><rect x="92.1109%" y="309" width="0.1334%" height="15" fill="rgb(227,149,46)" fg:x="74236021231" fg:w="107479224"/><text x="92.3609%" y="319.50"></text></g><g><title>packet_rewriter::network::packet::TransportPacket::rewrite (38,245,115,704 samples, 47.45%)</title><rect x="44.7904%" y="405" width="47.4539%" height="15" fill="rgb(218,36,50)" fg:x="36098413606" fg:w="38245115704"/><text x="45.0404%" y="415.50">packet_rewriter::network::packet::TransportPacket::rewrite</text></g><g><title>pnet_packet::tcp::ipv4_checksum (38,211,628,686 samples, 47.41%)</title><rect x="44.8319%" y="389" width="47.4124%" height="15" fill="rgb(226,80,48)" fg:x="36131900624" fg:w="38211628686"/><text x="45.0819%" y="399.50">pnet_packet::tcp::ipv4_checksum</text></g><g><title>pnet_packet::util::ipv4_checksum (38,195,702,722 samples, 47.39%)</title><rect x="44.8517%" y="373" width="47.3926%" height="15" fill="rgb(238,224,15)" fg:x="36147826588" fg:w="38195702722"/><text x="45.1017%" y="383.50">pnet_packet::util::ipv4_checksum</text></g><g><title>packet_rewriter::network::rewrite::rewrite_mac (33,959,769 samples, 0.04%)</title><rect x="92.2443%" y="405" width="0.0421%" height="15" fill="rgb(241,136,10)" fg:x="74343529310" fg:w="33959769"/><text x="92.4943%" y="415.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_packet (38,502,505,343 samples, 47.77%)</title><rect x="44.5420%" y="421" width="47.7733%" height="15" fill="rgb(208,32,45)" fg:x="35898268141" fg:w="38502505343"/><text x="44.7920%" y="431.50">packet_rewriter::network::rewrite::rewrite_packet</text></g><g><title>pnet_packet::util::ipv4_checksum (23,284,405 samples, 0.03%)</title><rect x="92.2864%" y="405" width="0.0289%" height="15" fill="rgb(207,135,9)" fg:x="74377489079" fg:w="23284405"/><text x="92.5364%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (14,248,321 samples, 0.02%)</title><rect x="92.3939%" y="389" width="0.0177%" height="15" fill="rgb(206,86,44)" fg:x="74464061126" fg:w="14248321"/><text x="92.6439%" y="399.50"></text></g><g><title>[unknown] (22,247,443 samples, 0.03%)</title><rect x="92.3939%" y="405" width="0.0276%" height="15" fill="rgb(245,177,15)" fg:x="74464061126" fg:w="22247443"/><text x="92.6439%" y="415.50"></text></g><g><title>__internal_syscall_cancel (18,269,340 samples, 0.02%)</title><rect x="92.9383%" y="373" width="0.0227%" height="15" fill="rgb(206,64,50)" fg:x="74902855201" fg:w="18269340"/><text x="93.1883%" y="383.50"></text></g><g><title>__syscall_cancel (37,097,976 samples, 0.05%)</title><rect x="92.9793%" y="373" width="0.0460%" height="15" fill="rgb(234,36,40)" fg:x="74935899157" fg:w="37097976"/><text x="93.2293%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (14,796,444 samples, 0.02%)</title><rect x="93.0446%" y="373" width="0.0184%" height="15" fill="rgb(213,64,8)" fg:x="74988499576" fg:w="14796444"/><text x="93.2946%" y="383.50"></text></g><g><title>malloc (11,711,103 samples, 0.01%)</title><rect x="93.0629%" y="373" width="0.0145%" height="15" fill="rgb(210,75,36)" fg:x="75003296020" fg:w="11711103"/><text x="93.3129%" y="383.50"></text></g><g><title>pcap_handle_packet_mmap (25,103,934 samples, 0.03%)</title><rect x="93.0775%" y="373" width="0.0311%" height="15" fill="rgb(229,88,21)" fg:x="75015007123" fg:w="25103934"/><text x="93.3275%" y="383.50"></text></g><g><title>pcap_next_ex (11,619,801 samples, 0.01%)</title><rect x="93.1086%" y="373" width="0.0144%" height="15" fill="rgb(252,204,47)" fg:x="75040111057" fg:w="11619801"/><text x="93.3586%" y="383.50"></text></g><g><title>pcap_read_linux_mmap_v2 (38,799,297 samples, 0.05%)</title><rect x="93.1230%" y="373" width="0.0481%" height="15" fill="rgb(208,77,27)" fg:x="75051730858" fg:w="38799297"/><text x="93.3730%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (11,450,812 samples, 0.01%)</title><rect x="93.2286%" y="357" width="0.0142%" height="15" fill="rgb(221,76,26)" fg:x="75136822493" fg:w="11450812"/><text x="93.4786%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,833,936,852 samples, 3.52%)</title><rect x="93.2428%" y="357" width="3.5163%" height="15" fill="rgb(225,139,18)" fg:x="75148273305" fg:w="2833936852"/><text x="93.4928%" y="367.50">__m..</text></g><g><title>pcap_next_ex (3,603,821,988 samples, 4.47%)</title><rect x="92.3153%" y="421" width="4.4716%" height="15" fill="rgb(230,137,11)" fg:x="74400773484" fg:w="3603821988"/><text x="92.5653%" y="431.50">pcap_..</text></g><g><title>pcap_read_linux_mmap_v2 (3,486,503,427 samples, 4.33%)</title><rect x="92.4609%" y="405" width="4.3260%" height="15" fill="rgb(212,28,1)" fg:x="74518092045" fg:w="3486503427"/><text x="92.7109%" y="415.50">pcap_..</text></g><g><title>pcap_handle_packet_mmap (3,165,420,286 samples, 3.93%)</title><rect x="92.8593%" y="389" width="3.9276%" height="15" fill="rgb(248,164,17)" fg:x="74839175186" fg:w="3165420286"/><text x="93.1093%" y="399.50">pcap..</text></g><g><title>pcapint_oneshot_linux (2,914,065,317 samples, 3.62%)</title><rect x="93.1712%" y="373" width="3.6157%" height="15" fill="rgb(222,171,42)" fg:x="75090530155" fg:w="2914065317"/><text x="93.4212%" y="383.50">pcap..</text></g><g><title>__libc_start_main@@GLIBC_2.34 (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="549" width="94.7208%" height="15" fill="rgb(243,84,45)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="559.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="533" width="94.7208%" height="15" fill="rgb(252,49,23)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="543.50">__libc_start_call_main</text></g><g><title>main (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="517" width="94.7208%" height="15" fill="rgb(215,19,7)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="527.50">main</text></g><g><title>std::rt::lang_start_internal (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="501" width="94.7208%" height="15" fill="rgb(238,81,41)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="511.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::{{closure}} (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="485" width="94.7208%" height="15" fill="rgb(210,199,37)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="495.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="469" width="94.7208%" height="15" fill="rgb(244,192,49)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="479.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>packet_rewriter::main (76,339,452,663 samples, 94.72%)</title><rect x="2.0756%" y="453" width="94.7208%" height="15" fill="rgb(226,211,11)" fg:x="1672787086" fg:w="76339452663"/><text x="2.3256%" y="463.50">packet_rewriter::main</text></g><g><title>packet_rewriter::network::listen::cap_rewrite (76,326,826,834 samples, 94.71%)</title><rect x="2.0912%" y="437" width="94.7051%" height="15" fill="rgb(236,162,54)" fg:x="1685412915" fg:w="76326826834"/><text x="2.3412%" y="447.50">packet_rewriter::network::listen::cap_rewrite</text></g><g><title>_start (76,339,994,359 samples, 94.72%)</title><rect x="2.0756%" y="565" width="94.7215%" height="15" fill="rgb(220,229,9)" fg:x="1672787086" fg:w="76339994359"/><text x="2.3256%" y="575.50">_start</text></g><g><title>cfree@GLIBC_2.2.5 (14,883,252 samples, 0.02%)</title><rect x="96.8022%" y="565" width="0.0185%" height="15" fill="rgb(250,87,22)" fg:x="78016919059" fg:w="14883252"/><text x="97.0522%" y="575.50"></text></g><g><title>_text (18,969,059 samples, 0.02%)</title><rect x="96.9625%" y="549" width="0.0235%" height="15" fill="rgb(239,43,17)" fg:x="78146113037" fg:w="18969059"/><text x="97.2125%" y="559.50"></text></g><g><title>_copy_from_user (120,738,081 samples, 0.15%)</title><rect x="97.4902%" y="501" width="0.1498%" height="15" fill="rgb(231,177,25)" fg:x="78571389430" fg:w="120738081"/><text x="97.7402%" y="511.50"></text></g><g><title>fdget (117,928,060 samples, 0.15%)</title><rect x="97.8096%" y="485" width="0.1463%" height="15" fill="rgb(219,179,1)" fg:x="78828801057" fg:w="117928060"/><text x="98.0596%" y="495.50"></text></g><g><title>__pollwait (67,798,443 samples, 0.08%)</title><rect x="98.3249%" y="437" width="0.0841%" height="15" fill="rgb(238,219,53)" fg:x="79244148633" fg:w="67798443"/><text x="98.5749%" y="447.50"></text></g><g><title>_raw_spin_unlock_irqrestore (19,460,473 samples, 0.02%)</title><rect x="98.4090%" y="437" width="0.0241%" height="15" fill="rgb(232,167,36)" fg:x="79311947076" fg:w="19460473"/><text x="98.6590%" y="447.50"></text></g><g><title>__list_add_valid_or_report (23,187,865 samples, 0.03%)</title><rect x="98.5368%" y="421" width="0.0288%" height="15" fill="rgb(244,19,51)" fg:x="79414897430" fg:w="23187865"/><text x="98.7868%" y="431.50"></text></g><g><title>__raw_spin_lock_irqsave (62,877,600 samples, 0.08%)</title><rect x="98.5655%" y="421" width="0.0780%" height="15" fill="rgb(224,6,22)" fg:x="79438085295" fg:w="62877600"/><text x="98.8155%" y="431.50"></text></g><g><title>datagram_poll (379,183,258 samples, 0.47%)</title><rect x="98.1776%" y="453" width="0.4705%" height="15" fill="rgb(224,145,5)" fg:x="79125430165" fg:w="379183258"/><text x="98.4276%" y="463.50"></text></g><g><title>add_wait_queue (173,205,874 samples, 0.21%)</title><rect x="98.4332%" y="437" width="0.2149%" height="15" fill="rgb(234,130,49)" fg:x="79331407549" fg:w="173205874"/><text x="98.6832%" y="447.50"></text></g><g><title>__x64_sys_poll (1,260,789,474 samples, 1.56%)</title><rect x="97.0884%" y="533" width="1.5644%" height="15" fill="rgb(254,6,2)" fg:x="78247578259" fg:w="1260789474"/><text x="97.3384%" y="543.50"></text></g><g><title>do_sys_poll (1,256,694,726 samples, 1.56%)</title><rect x="97.0935%" y="517" width="1.5593%" height="15" fill="rgb(208,96,46)" fg:x="78251673007" fg:w="1256694726"/><text x="97.3435%" y="527.50"></text></g><g><title>do_poll.constprop.0 (816,240,222 samples, 1.01%)</title><rect x="97.6400%" y="501" width="1.0128%" height="15" fill="rgb(239,3,39)" fg:x="78692127511" fg:w="816240222"/><text x="97.8900%" y="511.50"></text></g><g><title>sock_poll (561,638,616 samples, 0.70%)</title><rect x="97.9559%" y="485" width="0.6969%" height="15" fill="rgb(233,210,1)" fg:x="78946729117" fg:w="561638616"/><text x="98.2059%" y="495.50"></text></g><g><title>packet_poll (444,709,613 samples, 0.55%)</title><rect x="98.1010%" y="469" width="0.5518%" height="15" fill="rgb(244,137,37)" fg:x="79063658120" fg:w="444709613"/><text x="98.3510%" y="479.50"></text></g><g><title>packet_sendmsg (69,057,886 samples, 0.09%)</title><rect x="98.7416%" y="501" width="0.0857%" height="15" fill="rgb(240,136,2)" fg:x="79579957839" fg:w="69057886"/><text x="98.9916%" y="511.50"></text></g><g><title>dev_get_by_index (89,487,953 samples, 0.11%)</title><rect x="98.9142%" y="485" width="0.1110%" height="15" fill="rgb(239,18,37)" fg:x="79719080998" fg:w="89487953"/><text x="99.1642%" y="495.50"></text></g><g><title>packet_snd (171,851,879 samples, 0.21%)</title><rect x="98.8273%" y="501" width="0.2132%" height="15" fill="rgb(218,185,22)" fg:x="79649015725" fg:w="171851879"/><text x="99.0773%" y="511.50"></text></g><g><title>sock_alloc_send_pskb (12,298,653 samples, 0.02%)</title><rect x="99.0252%" y="485" width="0.0153%" height="15" fill="rgb(225,218,4)" fg:x="79808568951" fg:w="12298653"/><text x="99.2752%" y="495.50"></text></g><g><title>alloc_skb_with_frags (8,324,564 samples, 0.01%)</title><rect x="99.0302%" y="469" width="0.0103%" height="15" fill="rgb(230,182,32)" fg:x="79812543040" fg:w="8324564"/><text x="99.2802%" y="479.50"></text></g><g><title>__alloc_skb (8,324,564 samples, 0.01%)</title><rect x="99.0302%" y="453" width="0.0103%" height="15" fill="rgb(242,56,43)" fg:x="79812543040" fg:w="8324564"/><text x="99.2802%" y="463.50"></text></g><g><title>kmem_cache_alloc_node_noprof (8,324,564 samples, 0.01%)</title><rect x="99.0302%" y="437" width="0.0103%" height="15" fill="rgb(233,99,24)" fg:x="79812543040" fg:w="8324564"/><text x="99.2802%" y="447.50"></text></g><g><title>do_syscall_64 (1,726,431,292 samples, 2.14%)</title><rect x="96.9860%" y="549" width="2.1421%" height="15" fill="rgb(234,209,42)" fg:x="78165082096" fg:w="1726431292"/><text x="97.2360%" y="559.50">d..</text></g><g><title>__x64_sys_sendto (383,145,655 samples, 0.48%)</title><rect x="98.6528%" y="533" width="0.4754%" height="15" fill="rgb(227,7,12)" fg:x="79508367733" fg:w="383145655"/><text x="98.9028%" y="543.50"></text></g><g><title>__sys_sendto (383,145,655 samples, 0.48%)</title><rect x="98.6528%" y="517" width="0.4754%" height="15" fill="rgb(245,203,43)" fg:x="79508367733" fg:w="383145655"/><text x="98.9028%" y="527.50"></text></g><g><title>security_socket_sendmsg (70,645,784 samples, 0.09%)</title><rect x="99.0405%" y="501" width="0.0877%" height="15" fill="rgb(238,205,33)" fg:x="79820867604" fg:w="70645784"/><text x="99.2905%" y="511.50"></text></g><g><title>selinux_socket_sendmsg (35,951,857 samples, 0.04%)</title><rect x="99.0835%" y="485" width="0.0446%" height="15" fill="rgb(231,56,7)" fg:x="79855561531" fg:w="35951857"/><text x="99.3335%" y="495.50"></text></g><g><title>avc_has_perm (20,806,877 samples, 0.03%)</title><rect x="99.1023%" y="469" width="0.0258%" height="15" fill="rgb(244,186,29)" fg:x="79870706511" fg:w="20806877"/><text x="99.3523%" y="479.50"></text></g><g><title>avc_has_perm_noaudit (20,806,877 samples, 0.03%)</title><rect x="99.1023%" y="453" width="0.0258%" height="15" fill="rgb(234,111,31)" fg:x="79870706511" fg:w="20806877"/><text x="99.3523%" y="463.50"></text></g><g><title>avc_lookup (13,774,188 samples, 0.02%)</title><rect x="99.1111%" y="437" width="0.0171%" height="15" fill="rgb(241,149,10)" fg:x="79877739200" fg:w="13774188"/><text x="99.3611%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,903,941,824 samples, 2.36%)</title><rect x="96.8255%" y="565" width="2.3624%" height="15" fill="rgb(249,206,44)" fg:x="78035716169" fg:w="1903941824"/><text x="97.0755%" y="575.50">en..</text></g><g><title>srso_alias_return_thunk (48,144,605 samples, 0.06%)</title><rect x="99.1282%" y="549" width="0.0597%" height="15" fill="rgb(251,153,30)" fg:x="79891513388" fg:w="48144605"/><text x="99.3782%" y="559.50"></text></g><g><title>srso_alias_safe_ret (48,144,605 samples, 0.06%)</title><rect x="99.1282%" y="533" width="0.0597%" height="15" fill="rgb(239,152,38)" fg:x="79891513388" fg:w="48144605"/><text x="99.3782%" y="543.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (88,790,025 samples, 0.11%)</title><rect x="99.1879%" y="565" width="0.1102%" height="15" fill="rgb(249,139,47)" fg:x="79939657993" fg:w="88790025"/><text x="99.4379%" y="575.50"></text></g><g><title>malloc (11,906,998 samples, 0.01%)</title><rect x="99.2981%" y="565" width="0.0148%" height="15" fill="rgb(244,64,35)" fg:x="80028448018" fg:w="11906998"/><text x="99.5481%" y="575.50"></text></g><g><title>packet_rewriter::network::listen::cap_rewrite (65,455,300 samples, 0.08%)</title><rect x="99.3128%" y="565" width="0.0812%" height="15" fill="rgb(216,46,15)" fg:x="80040355016" fg:w="65455300"/><text x="99.5628%" y="575.50"></text></g><g><title>packet_rewriter::network::packet::IpPacket::get_transport_packet_ipv4_addr (11,492,514 samples, 0.01%)</title><rect x="99.3940%" y="565" width="0.0143%" height="15" fill="rgb(250,74,19)" fg:x="80105810316" fg:w="11492514"/><text x="99.6440%" y="575.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_mac (47,997,087 samples, 0.06%)</title><rect x="99.4225%" y="565" width="0.0596%" height="15" fill="rgb(249,42,33)" fg:x="80128703579" fg:w="47997087"/><text x="99.6725%" y="575.50"></text></g><g><title>packet_rewriter::network::rewrite::rewrite_packet (71,561,900 samples, 0.09%)</title><rect x="99.4820%" y="565" width="0.0888%" height="15" fill="rgb(242,149,17)" fg:x="80176700666" fg:w="71561900"/><text x="99.7320%" y="575.50"></text></g><g><title>pcap_handle_packet_mmap (14,991,799 samples, 0.02%)</title><rect x="99.5752%" y="565" width="0.0186%" height="15" fill="rgb(244,29,21)" fg:x="80251796500" fg:w="14991799"/><text x="99.8252%" y="575.50"></text></g><g><title>__internal_syscall_cancel (10,464,343 samples, 0.01%)</title><rect x="99.6114%" y="549" width="0.0130%" height="15" fill="rgb(220,130,37)" fg:x="80280963394" fg:w="10464343"/><text x="99.8614%" y="559.50"></text></g><g><title>pcapint_oneshot_linux (21,350,825 samples, 0.03%)</title><rect x="99.6114%" y="565" width="0.0265%" height="15" fill="rgb(211,67,2)" fg:x="80280963394" fg:w="21350825"/><text x="99.8614%" y="575.50"></text></g><g><title>__libc_sendto (10,886,482 samples, 0.01%)</title><rect x="99.6244%" y="549" width="0.0135%" height="15" fill="rgb(235,68,52)" fg:x="80291427737" fg:w="10886482"/><text x="99.8744%" y="559.50"></text></g><g><title>pnet_packet::ipv4::ipv4_payload_length (11,608,444 samples, 0.01%)</title><rect x="99.6465%" y="565" width="0.0144%" height="15" fill="rgb(246,142,3)" fg:x="80309283280" fg:w="11608444"/><text x="99.8965%" y="575.50"></text></g><g><title>pnet_packet::util::ipv4_checksum (187,027,348 samples, 0.23%)</title><rect x="99.6609%" y="565" width="0.2321%" height="15" fill="rgb(241,25,7)" fg:x="80320891724" fg:w="187027348"/><text x="99.9109%" y="575.50"></text></g><g><title>pnet_sys::send_to (67,306,767 samples, 0.08%)</title><rect x="99.8930%" y="565" width="0.0835%" height="15" fill="rgb(242,119,39)" fg:x="80507919072" fg:w="67306767"/><text x="100.1430%" y="575.50"></text></g><g><title>packet_rewriter (80,594,169,031 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(241,98,45)" fg:x="0" fg:w="80594169031"/><text x="0.2500%" y="591.50">packet_rewriter</text></g><g><title>syscall_return_via_sysret (18,943,192 samples, 0.02%)</title><rect x="99.9765%" y="565" width="0.0235%" height="15" fill="rgb(254,28,30)" fg:x="80575225839" fg:w="18943192"/><text x="100.2265%" y="575.50"></text></g><g><title>all (80,594,170,974 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(241,142,54)" fg:x="0" fg:w="80594170974"/><text x="0.2500%" y="607.50"></text></g></svg></svg>